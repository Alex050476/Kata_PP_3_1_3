2025-03-31 20:30:03 - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-03-31 20:30:03 - HV000001: Hibernate Validator 8.0.2.Final
2025-03-31 20:30:03 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-31 20:30:03 - Trying to load META-INF/validation.xml via TCCL
2025-03-31 20:30:03 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-31 20:30:03 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-31 20:30:03 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-31 20:30:03 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-31 20:30:03 - Loaded expression factory via original TCCL
2025-03-31 20:30:03 - Starting SpringBootSecurityDemoApplication using Java 23.0.2 with PID 401848 (C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes started by Alexey in C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap)
2025-03-31 20:30:03 - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-31 20:30:03 - No active profile set, falling back to 1 default profile: "default"
2025-03-31 20:30:04 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-31 20:30:04 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-31 20:30:04 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-31 20:30:04 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-31 20:30:04 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-31 20:30:04 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-31 20:30:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-31 20:30:04 - Finished Spring Data repository scanning in 48 ms. Found 2 JPA repository interfaces.
2025-03-31 20:30:05 - Tomcat initialized with port 8080 (http)
2025-03-31 20:30:05 - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-31 20:30:05 - Starting service [Tomcat]
2025-03-31 20:30:05 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-31 20:30:05 - Initializing Spring embedded WebApplicationContext
2025-03-31 20:30:05 - Root WebApplicationContext: initialization completed in 1284 ms
2025-03-31 20:30:05 - Filter 'hiddenHttpMethodFilter' configured for use
2025-03-31 20:30:05 - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
2025-03-31 20:30:05 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b5%d0%b9/Java_study/Kata_PP_3_1_3_BS_Bootstrap/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.kata.spring.boot_security.demo.models.Role
		ru.kata.spring.boot_security.demo.models.User]
	Mapping files names []
	Properties []
2025-03-31 20:30:05 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-03-31 20:30:05 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-03-31 20:30:05 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-31 20:30:05 - HHH000206: 'hibernate.properties' not found
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-31 20:30:05 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-03-31 20:30:05 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-03-31 20:30:05 - HHH000026: Second-level cache disabled
2025-03-31 20:30:05 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-31 20:30:05 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-31 20:30:05 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-31 20:30:05 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10618775
2025-03-31 20:30:05 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10618775
2025-03-31 20:30:05 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-31 20:30:05 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-31 20:30:05 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-31 20:30:05 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-31 20:30:05 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-31 20:30:05 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-31 20:30:05 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-31 20:30:05 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-31 20:30:05 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-31 20:30:05 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-31 20:30:05 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-31 20:30:05 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-31 20:30:05 - Adding type registration image -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-31 20:30:05 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-31 20:30:05 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-31 20:30:05 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-31 20:30:05 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73d62b5
2025-03-31 20:30:05 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-31 20:30:05 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-31 20:30:05 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-31 20:30:05 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-31 20:30:05 - Adding type registration int -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-31 20:30:05 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-31 20:30:05 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-31 20:30:05 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-31 20:30:05 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-31 20:30:05 - Adding type registration float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-31 20:30:05 - Adding type registration float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-31 20:30:05 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-31 20:30:05 - Adding type registration double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-31 20:30:05 - Adding type registration double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-31 20:30:05 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-31 20:30:05 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-31 20:30:05 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-31 20:30:05 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-31 20:30:05 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-31 20:30:05 - Adding type registration character -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-31 20:30:05 - Adding type registration char -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-31 20:30:05 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-31 20:30:05 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-31 20:30:05 - Adding type registration string -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-31 20:30:05 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-31 20:30:05 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b7facc7
2025-03-31 20:30:05 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-31 20:30:05 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-31 20:30:05 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-31 20:30:05 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@24197b13
2025-03-31 20:30:05 - Adding type registration text -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-31 20:30:05 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2776fd8f
2025-03-31 20:30:05 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-31 20:30:05 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-31 20:30:05 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-31 20:30:05 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-31 20:30:05 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@49b89425
2025-03-31 20:30:05 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59328218
2025-03-31 20:30:05 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-31 20:30:05 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@478967eb
2025-03-31 20:30:05 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4a1dda83
2025-03-31 20:30:05 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7f2b39a
2025-03-31 20:30:05 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-31 20:30:05 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-31 20:30:05 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-31 20:30:05 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-31 20:30:05 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@52621501
2025-03-31 20:30:05 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@52621501
2025-03-31 20:30:05 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-31 20:30:05 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-31 20:30:05 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-31 20:30:05 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-31 20:30:05 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-31 20:30:05 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-31 20:30:05 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-31 20:30:05 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-31 20:30:05 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14457a95
2025-03-31 20:30:05 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48567727
2025-03-31 20:30:05 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10e9a5fe
2025-03-31 20:30:05 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-31 20:30:05 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-31 20:30:05 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1abcd059
2025-03-31 20:30:05 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61a87366
2025-03-31 20:30:05 - Adding type registration date -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-31 20:30:05 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-31 20:30:05 - Adding type registration time -> org.hibernate.type.BasicTypeReference@dada335
2025-03-31 20:30:05 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@dada335
2025-03-31 20:30:05 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-31 20:30:05 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-31 20:30:05 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-31 20:30:05 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-31 20:30:05 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-31 20:30:05 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-31 20:30:05 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-31 20:30:05 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-31 20:30:05 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-31 20:30:05 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-31 20:30:05 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-31 20:30:05 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-31 20:30:05 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-31 20:30:05 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c0df4ab
2025-03-31 20:30:05 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e362407
2025-03-31 20:30:05 - Adding type registration class -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-31 20:30:05 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-31 20:30:05 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-31 20:30:05 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-31 20:30:05 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-31 20:30:05 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17fbfb02
2025-03-31 20:30:05 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17fbfb02
2025-03-31 20:30:05 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@8f2e3e6
2025-03-31 20:30:05 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@8f2e3e6
2025-03-31 20:30:05 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-31 20:30:05 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-31 20:30:05 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-31 20:30:05 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-31 20:30:05 - Adding type registration url -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-31 20:30:05 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-31 20:30:05 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b170235
2025-03-31 20:30:05 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e9bf744
2025-03-31 20:30:05 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@45e140ae
2025-03-31 20:30:05 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@48cdb156
2025-03-31 20:30:05 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b4814d0
2025-03-31 20:30:05 - Adding type registration object -> org.hibernate.type.JavaObjectType@38087342
2025-03-31 20:30:05 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38087342
2025-03-31 20:30:05 - Adding type registration null -> org.hibernate.type.NullType@2a04ab05
2025-03-31 20:30:05 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5ebbde60
2025-03-31 20:30:05 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@a056b26
2025-03-31 20:30:05 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2a5abd3c
2025-03-31 20:30:05 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@250967f1
2025-03-31 20:30:05 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@25c1f5ee
2025-03-31 20:30:05 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bce62b
2025-03-31 20:30:05 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bf018dd
2025-03-31 20:30:05 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15a8cebd
2025-03-31 20:30:05 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9] into BootstrapContext; was [null]
2025-03-31 20:30:05 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9) [was null]
2025-03-31 20:30:05 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@200d1a3d] into BootstrapContext; was [null]
2025-03-31 20:30:05 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7de147e9] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12567179]
2025-03-31 20:30:05 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-31 20:30:05 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9]
2025-03-31 20:30:05 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9]
2025-03-31 20:30:05 - HikariPool-1 - configuration:
2025-03-31 20:30:05 - allowPoolSuspension.............false
2025-03-31 20:30:05 - autoCommit......................true
2025-03-31 20:30:05 - catalog.........................none
2025-03-31 20:30:05 - connectionInitSql...............none
2025-03-31 20:30:05 - connectionTestQuery.............none
2025-03-31 20:30:05 - connectionTimeout...............30000
2025-03-31 20:30:05 - dataSource......................none
2025-03-31 20:30:05 - dataSourceClassName.............none
2025-03-31 20:30:05 - dataSourceJNDI..................none
2025-03-31 20:30:05 - dataSourceProperties............{password=<masked>}
2025-03-31 20:30:05 - driverClassName................."com.mysql.cj.jdbc.Driver"
2025-03-31 20:30:05 - exceptionOverrideClassName......none
2025-03-31 20:30:05 - healthCheckProperties...........{}
2025-03-31 20:30:05 - healthCheckRegistry.............none
2025-03-31 20:30:05 - idleTimeout.....................600000
2025-03-31 20:30:05 - initializationFailTimeout.......1
2025-03-31 20:30:05 - isolateInternalQueries..........false
2025-03-31 20:30:05 - jdbcUrl.........................jdbc:mysql://localhost:3306/mypp231db?allowPublicKeyRetrieval=TRUE&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
2025-03-31 20:30:05 - keepaliveTime...................0
2025-03-31 20:30:05 - leakDetectionThreshold..........0
2025-03-31 20:30:05 - maxLifetime.....................1800000
2025-03-31 20:30:05 - maximumPoolSize.................10
2025-03-31 20:30:05 - metricRegistry..................none
2025-03-31 20:30:05 - metricsTrackerFactory...........none
2025-03-31 20:30:05 - minimumIdle.....................10
2025-03-31 20:30:05 - password........................<masked>
2025-03-31 20:30:05 - poolName........................"HikariPool-1"
2025-03-31 20:30:05 - readOnly........................false
2025-03-31 20:30:05 - registerMbeans..................false
2025-03-31 20:30:05 - scheduledExecutor...............none
2025-03-31 20:30:05 - schema..........................none
2025-03-31 20:30:05 - threadFactory...................internal
2025-03-31 20:30:05 - transactionIsolation............default
2025-03-31 20:30:05 - username........................"root"
2025-03-31 20:30:05 - validationTimeout...............5000
2025-03-31 20:30:05 - HikariPool-1 - Starting...
2025-03-31 20:30:05 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24fef542
2025-03-31 20:30:05 - HikariPool-1 - Start completed.
2025-03-31 20:30:05 - Database ->
	   name : MySQL
	version : 8.0.38
	  major : 8
	  minor : 0
2025-03-31 20:30:05 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-03-31 20:30:05 - JDBC version : 4.2
2025-03-31 20:30:06 - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-31 20:30:06 - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.38
2025-03-31 20:30:06 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-03-31 20:30:06 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-03-31 20:30:06 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.38
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-31 20:30:06 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76e00bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee2423)
2025-03-31 20:30:06 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@343d1d25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@762da62b)
2025-03-31 20:30:06 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e5c5e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76dc36e5)
2025-03-31 20:30:06 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a54c92e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31533eb1)
2025-03-31 20:30:06 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fb71788) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8cb7185)
2025-03-31 20:30:06 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dac40b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c54c497)
2025-03-31 20:30:06 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b788dc2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58ec8271)
2025-03-31 20:30:06 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a44effb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ee258)
2025-03-31 20:30:06 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f676900) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73a49597)
2025-03-31 20:30:06 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-03-31 20:30:06 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-03-31 20:30:06 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-03-31 20:30:06 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-03-31 20:30:06 - Adding type registration null -> org.hibernate.type.NullType@92fd091
2025-03-31 20:30:06 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2a04ab05`
2025-03-31 20:30:06 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-03-31 20:30:06 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-03-31 20:30:06 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-03-31 20:30:06 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-31 20:30:06 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-31 20:30:06 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-31 20:30:06 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-31 20:30:06 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-31 20:30:06 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-31 20:30:06 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-03-31 20:30:06 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-31 20:30:06 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-31 20:30:06 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e0fdc83] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5dacf18d]
2025-03-31 20:30:06 - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51154714
2025-03-31 20:30:06 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-03-31 20:30:06 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.Role
2025-03-31 20:30:06 - Import with entity name Role
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-03-31 20:30:06 - Bind entity ru.kata.spring.boot_security.demo.models.Role on table roles
2025-03-31 20:30:06 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10284d2f
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-31 20:30:06 - MetadataSourceProcessor property id with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:id]
2025-03-31 20:30:06 - building BasicValue for id
2025-03-31 20:30:06 - Skipping column re-registration: roles.id
2025-03-31 20:30:06 - Building property id
2025-03-31 20:30:06 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='role')
2025-03-31 20:30:06 - MetadataSourceProcessor property role with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:role]
2025-03-31 20:30:06 - building BasicValue for role
2025-03-31 20:30:06 - Skipping column re-registration: roles.role
2025-03-31 20:30:06 - Building property role
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21f29a51
2025-03-31 20:30:06 - Binding column: IndexColumn(column='userSet_ORDER')
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='userSet_KEY')
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn(column='userSet_KEY')
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn()
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn()
2025-03-31 20:30:06 - Collection role: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - Building property userSet
2025-03-31 20:30:06 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-31 20:30:06 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.User
2025-03-31 20:30:06 - Import with entity name User
2025-03-31 20:30:06 - Bind entity ru.kata.spring.boot_security.demo.models.User on table users
2025-03-31 20:30:06 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-31 20:30:06 - MetadataSourceProcessor property id with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:id]
2025-03-31 20:30:06 - building BasicValue for id
2025-03-31 20:30:06 - Skipping column re-registration: users.id
2025-03-31 20:30:06 - Building property id
2025-03-31 20:30:06 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='age')
2025-03-31 20:30:06 - MetadataSourceProcessor property age with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:age]
2025-03-31 20:30:06 - building BasicValue for age
2025-03-31 20:30:06 - Skipping column re-registration: users.age
2025-03-31 20:30:06 - Building property age
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - MetadataSourceProcessor property email with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:email]
2025-03-31 20:30:06 - building BasicValue for email
2025-03-31 20:30:06 - Skipping column re-registration: users.email
2025-03-31 20:30:06 - Building property email
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='username')
2025-03-31 20:30:06 - MetadataSourceProcessor property name with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:name]
2025-03-31 20:30:06 - building BasicValue for name
2025-03-31 20:30:06 - Skipping column re-registration: users.username
2025-03-31 20:30:06 - Building property name
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='usernickname')
2025-03-31 20:30:06 - MetadataSourceProcessor property nickname with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:nickname]
2025-03-31 20:30:06 - building BasicValue for nickname
2025-03-31 20:30:06 - Skipping column re-registration: users.usernickname
2025-03-31 20:30:06 - Building property nickname
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - MetadataSourceProcessor property password with lazy=false
2025-03-31 20:30:06 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:password]
2025-03-31 20:30:06 - building BasicValue for password
2025-03-31 20:30:06 - Skipping column re-registration: users.password
2025-03-31 20:30:06 - Building property password
2025-03-31 20:30:06 - Binding column: IndexColumn(column='roleSet_ORDER')
2025-03-31 20:30:06 - Binding column: AnnotatedColumn()
2025-03-31 20:30:06 - Binding column: AnnotatedColumn(column='roleSet_KEY')
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn(column='roleSet_KEY')
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-03-31 20:30:06 - Binding column: AnnotatedJoinColumn(column='role_id')
2025-03-31 20:30:06 - Collection role: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 - Building property roleSet
2025-03-31 20:30:06 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for role
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for age
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for nickname
2025-03-31 20:30:06 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-03-31 20:30:06 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
2025-03-31 20:30:06 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-03-31 20:30:06 - Second pass for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-31 20:30:06 - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-31 20:30:06 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-31 20:30:06 - Mapped collection key: user_id, element: role_id
2025-03-31 20:30:06 - Second pass for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-03-31 20:30:06 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-31 20:30:06 - Retrieving property ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 - Mapped collection key: role_id, element: user_id
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7007b260
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-03-31 20:30:06 - Building session factory
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d911f3e
2025-03-31 20:30:06 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-31 20:30:06 - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1c2b65cc, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.4.2\spring-boot-starter-thymeleaf-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.2\spring-boot-starter-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.2\spring-boot-autoconfigure-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.2\spring-boot-starter-logging-3.4.2.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\Алексей\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Алексей\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.3.RELEASE\thymeleaf-spring6-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf\3.1.3.RELEASE\thymeleaf-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.2\spring-boot-starter-web-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.2\spring-boot-starter-json-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.2\spring-boot-starter-tomcat-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-web\6.2.2\spring-web-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-beans\6.2.2\spring-beans-6.2.2.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-observation\1.14.3\micrometer-observation-1.14.3.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-commons\1.14.3\micrometer-commons-1.14.3.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-webmvc\6.2.2\spring-webmvc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-context\6.2.2\spring-context-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-expression\6.2.2\spring-expression-6.2.2.jar;C:\Users\Алексей\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Алексей\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Алексей\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-core\6.2.2\spring-core-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jcl\6.2.2\spring-jcl-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.2\spring-boot-starter-security-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aop\6.2.2\spring-aop-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.2\spring-boot-starter-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\hibernate\orm\hibernate-core\6.6.5.Final\hibernate-core-6.6.5.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Алексей\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Алексей\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Алексей\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Алексей\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Алексей\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-jpa\3.4.2\spring-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-commons\3.4.2\spring-data-commons-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-orm\6.2.2\spring-orm-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-tx\6.2.2\spring-tx-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aspects\6.2.2\spring-aspects-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.2\spring-boot-starter-jdbc-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jdbc\6.2.2\spring-jdbc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.2\spring-boot-starter-validation-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Алексей\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Baku, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 11, APPLICATION_NAME=Kata_3_1_2_S_Boot, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin, sun.java.command=ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@390a7532, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\Алексей, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\Алексей\.jdks\openjdk-23.0.2, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=Alexey, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\CD86~1\AppData\Local\Temp\, catalina.home=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.9986825244826502766, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=401848, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.9986825244826502766, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@595184d8, native.encoding=Cp1251, java.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\app\18c\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\app\apache-maven-3.9.8\bin;C:\Users\Алексей\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.4\bin;;C:\Microsoft VS Code\bin;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7-58, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=67.0, LOGGED_APPLICATION_NAME=[Kata_3_1_2_S_Boot] }
2025-03-31 20:30:06 - Session factory constructed with filter configurations : {}
2025-03-31 20:30:06 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-31 20:30:06 - Trying to load META-INF/validation.xml via TCCL
2025-03-31 20:30:06 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-31 20:30:06 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-31 20:30:06 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-31 20:30:06 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-31 20:30:06 - Loaded expression factory via original TCCL
2025-03-31 20:30:06 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-31 20:30:06 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-31 20:30:06 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-31 20:30:06 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-31 20:30:06 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-31 20:30:06 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7449aed6
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-31 20:30:06 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@685a8f97
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6d695ec4] under count; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@69fd99c1] under every; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@32d8710a] under any; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d3d4a54] under sinh; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@215c6ec0] under cosh; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b19b346] under tanh; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5b8e8] under pi; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@706d2bae] under log; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : length -> character_length
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@43b45ce4] under position; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@f6bc75c] under overlay; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@22854f2b] under trim; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@16c8e9b8] under cast; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7030b74c] under collate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@75063bd0] under extract; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@53fc870f] under ifnull; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@64fc6470] under pad; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6c8ad6d7] under str; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@652a1a17] under format; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@69419d59] under timestampadd; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@57e57dc5] under timestampdiff; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : dateadd -> timestampadd
2025-03-31 20:30:06 - Registering alternate key : datediff -> timestampdiff
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@838e109] under current_date; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7474196] under current_time; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11ee671f] under current_timestamp; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : current date -> current_date
2025-03-31 20:30:06 - Registering alternate key : current time -> current_time
2025-03-31 20:30:06 - Registering alternate key : current timestamp -> current_timestamp
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18209303] under local_date; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57df09a7] under local_time; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa9a93b] under local_datetime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@81dfdee] under offset_datetime; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : local date -> local_date
2025-03-31 20:30:06 - Registering alternate key : local time -> local_time
2025-03-31 20:30:06 - Registering alternate key : local datetime -> local_datetime
2025-03-31 20:30:06 - Registering alternate key : offset datetime -> offset_datetime
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@14b9df65] under instant; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : current_instant -> instant
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@21ce2e4d] under sql; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@706d2bae
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2573b149] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1479ed5a] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : day -> dayofmonth
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3211cc84] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@43b45ce4
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@87fc0fc] under trunc; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : truncate -> trunc
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671f545b] under bitand; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c335b9] under bitor; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c8d8e7] under bitxor; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c68e82] under bitnot; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e66bf2d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@652a1a17
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@57df09a7
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6aa9a93b
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7112fa5] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5b8e8
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@342dc040] under chr; prior registration was null
2025-03-31 20:30:06 - Registering alternate key : char -> chr
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a8ead9] under sysdate; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@28c7fd9d] under rank; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6a63ff31] under dense_rank; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1c4aa701] under percent_rank; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6f36267d] under cume_dist; prior registration was null
2025-03-31 20:30:06 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1a85e86e] under listagg; prior registration was null
2025-03-31 20:30:06 - abs(NUMERIC arg)
2025-03-31 20:30:06 - Double acos(NUMERIC arg)
2025-03-31 20:30:06 - adddate(DATE datetime, INTEGER days)
2025-03-31 20:30:06 - addtime(TIME datetime, TIME time)
2025-03-31 20:30:06 - Boolean any(BOOLEAN arg)
2025-03-31 20:30:06 - Integer ascii(STRING arg)
2025-03-31 20:30:06 - Double asin(NUMERIC arg)
2025-03-31 20:30:06 - Double atan(NUMERIC arg)
2025-03-31 20:30:06 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-03-31 20:30:06 - avg(arg)
2025-03-31 20:30:06 - bit_and(arg)
2025-03-31 20:30:06 - Integer bit_length(STRING_OR_CLOB arg)
2025-03-31 20:30:06 - bit_or(arg)
2025-03-31 20:30:06 - bitand(arg0, arg1)
2025-03-31 20:30:06 - bitnot(arg)
2025-03-31 20:30:06 - bitor(arg0, arg1)
2025-03-31 20:30:06 - bitxor(arg0, arg1)
2025-03-31 20:30:06 - cast(arg as Type)
2025-03-31 20:30:06 - ceiling(NUMERIC arg)
2025-03-31 20:30:06 - Character char(INTEGER arg)
2025-03-31 20:30:06 - Integer character_length(STRING_OR_CLOB arg)
2025-03-31 20:30:06 - Character chr(INTEGER arg)
2025-03-31 20:30:06 - coalesce(arg0[, arg1[, ...]])
2025-03-31 20:30:06 - String collate(STRING string as COLLATION collation)
2025-03-31 20:30:06 - String concat(STRING string0[, STRING string1[, ...]])
2025-03-31 20:30:06 - Double cos(NUMERIC arg)
2025-03-31 20:30:06 - Double cosh(NUMERIC arg)
2025-03-31 20:30:06 - Double cot(NUMERIC arg)
2025-03-31 20:30:06 - Long count([distinct ]{arg|*})
2025-03-31 20:30:06 - Integer crc32(arg)
2025-03-31 20:30:06 - Double cume_dist([arg0[, ...]])
2025-03-31 20:30:06 - Date curdate()
2025-03-31 20:30:06 - Date current date
2025-03-31 20:30:06 - Time current time
2025-03-31 20:30:06 - Timestamp current timestamp
2025-03-31 20:30:06 - Date current_date
2025-03-31 20:30:06 - Instant current_instant
2025-03-31 20:30:06 - Time current_time
2025-03-31 20:30:06 - Timestamp current_timestamp
2025-03-31 20:30:06 - Time curtime()
2025-03-31 20:30:06 - Date date(arg)
2025-03-31 20:30:06 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-31 20:30:06 - Integer datediff(DATE end, DATE start)
2025-03-31 20:30:06 - Integer day(DATE arg)
2025-03-31 20:30:06 - String dayname(DATE arg)
2025-03-31 20:30:06 - Integer dayofmonth(DATE arg)
2025-03-31 20:30:06 - Integer dayofweek(DATE arg)
2025-03-31 20:30:06 - Integer dayofyear(DATE arg)
2025-03-31 20:30:06 - Double degrees(NUMERIC arg)
2025-03-31 20:30:06 - Long dense_rank([arg0[, ...]])
2025-03-31 20:30:06 - Boolean every(BOOLEAN arg)
2025-03-31 20:30:06 - Double exp(NUMERIC arg)
2025-03-31 20:30:06 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-03-31 20:30:06 - first_valueANY value
2025-03-31 20:30:06 - floor(NUMERIC arg)
2025-03-31 20:30:06 - String format(TEMPORAL datetime as STRING pattern)
2025-03-31 20:30:06 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-31 20:30:06 - Integer hour(TIME arg)
2025-03-31 20:30:06 - ifnull(arg0, arg1)
2025-03-31 20:30:06 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-03-31 20:30:06 - Instant instant
2025-03-31 20:30:06 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-03-31 20:30:06 - lagANY value[, INTEGER offset[, ANY default]]
2025-03-31 20:30:06 - Date last_day(DATE arg)
2025-03-31 20:30:06 - last_valueANY value
2025-03-31 20:30:06 - leadANY value[, INTEGER offset[, ANY default]]
2025-03-31 20:30:06 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-31 20:30:06 - String left(STRING string, INTEGER length)
2025-03-31 20:30:06 - Integer length(STRING_OR_CLOB arg)
2025-03-31 20:30:06 - String listagg(STRING arg0, STRING arg1)
2025-03-31 20:30:06 - Double ln(NUMERIC arg)
2025-03-31 20:30:06 - LocalDate local date
2025-03-31 20:30:06 - LocalDateTime local datetime
2025-03-31 20:30:06 - LocalTime local time
2025-03-31 20:30:06 - LocalDate local_date
2025-03-31 20:30:06 - LocalDateTime local_datetime
2025-03-31 20:30:06 - LocalTime local_time
2025-03-31 20:30:06 - Timestamp localtime
2025-03-31 20:30:06 - Timestamp localtimestamp
2025-03-31 20:30:06 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-03-31 20:30:06 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-03-31 20:30:06 - Double log10(NUMERIC arg)
2025-03-31 20:30:06 - Double log2(NUMERIC arg)
2025-03-31 20:30:06 - String lower(STRING string)
2025-03-31 20:30:06 - String lpad(string, length[, padding])
2025-03-31 20:30:06 - String ltrim(STRING string[, STRING characters])
2025-03-31 20:30:06 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-03-31 20:30:06 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-03-31 20:30:06 - max(COMPARABLE arg)
2025-03-31 20:30:06 - String md5(arg)
2025-03-31 20:30:06 - Integer microsecond(TIME arg)
2025-03-31 20:30:06 - min(COMPARABLE arg)
2025-03-31 20:30:06 - Integer minute(TIME arg)
2025-03-31 20:30:06 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-03-31 20:30:06 - Integer month(DATE arg)
2025-03-31 20:30:06 - String monthname(DATE arg)
2025-03-31 20:30:06 - Timestamp now()
2025-03-31 20:30:06 - nth_valueANY value, INTEGER nth
2025-03-31 20:30:06 - nullif(arg0, arg1)
2025-03-31 20:30:06 - Integer octet_length(STRING_OR_CLOB arg)
2025-03-31 20:30:06 - OffsetDateTime offset datetime
2025-03-31 20:30:06 - OffsetDateTime offset_datetime
2025-03-31 20:30:06 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-03-31 20:30:06 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-03-31 20:30:06 - Double percent_rank([arg0[, ...]])
2025-03-31 20:30:06 - Double pi
2025-03-31 20:30:06 - Integer position(STRING pattern in STRING string)
2025-03-31 20:30:06 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-03-31 20:30:06 - Integer quarter(DATE arg)
2025-03-31 20:30:06 - Double radians(NUMERIC arg)
2025-03-31 20:30:06 - Double rand([INTEGER seed])
2025-03-31 20:30:06 - Long rank([arg0[, ...]])
2025-03-31 20:30:06 - String repeat(STRING string, INTEGER times)
2025-03-31 20:30:06 - String replace(STRING string, STRING pattern, STRING replacement)
2025-03-31 20:30:06 - String reverse(STRING arg)
2025-03-31 20:30:06 - String right(STRING string, INTEGER length)
2025-03-31 20:30:06 - round(NUMERIC number[, INTEGER places])
2025-03-31 20:30:06 - Long row_number()
2025-03-31 20:30:06 - String rpad(string, length[, padding])
2025-03-31 20:30:06 - String rtrim(STRING string[, STRING characters])
2025-03-31 20:30:06 - Integer second(TIME arg)
2025-03-31 20:30:06 - String sha(arg)
2025-03-31 20:30:06 - String sha1(arg)
2025-03-31 20:30:06 - String sha2(arg0, arg1)
2025-03-31 20:30:06 - Integer sign(NUMERIC arg)
2025-03-31 20:30:06 - Double sin(NUMERIC arg)
2025-03-31 20:30:06 - Double sinh(NUMERIC arg)
2025-03-31 20:30:06 - String soundex(arg)
2025-03-31 20:30:06 - String space(INTEGER arg)
2025-03-31 20:30:06 - Object sql
2025-03-31 20:30:06 - Double sqrt(NUMERIC arg)
2025-03-31 20:30:06 - Double stddev(NUMERIC arg)
2025-03-31 20:30:06 - Double stddev_pop(NUMERIC arg)
2025-03-31 20:30:06 - Double stddev_samp(NUMERIC arg)
2025-03-31 20:30:06 - String str(arg)
2025-03-31 20:30:06 - subdate(DATE datetime, INTEGER days)
2025-03-31 20:30:06 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-03-31 20:30:06 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-03-31 20:30:06 - subtime(TIME datetime, TIME time)
2025-03-31 20:30:06 - sum(arg)
2025-03-31 20:30:06 - Timestamp sysdate()
2025-03-31 20:30:06 - Double tan(NUMERIC arg)
2025-03-31 20:30:06 - Double tanh(NUMERIC arg)
2025-03-31 20:30:06 - String time(arg)
2025-03-31 20:30:06 - Timestamp timestamp(arg0[, arg1])
2025-03-31 20:30:06 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-31 20:30:06 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-03-31 20:30:06 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-03-31 20:30:06 - trunc( ... )
2025-03-31 20:30:06 - truncate( ... )
2025-03-31 20:30:06 - String upper(STRING string)
2025-03-31 20:30:06 - Date utc_date
2025-03-31 20:30:06 - Time utc_time
2025-03-31 20:30:06 - Timestamp utc_timestamp
2025-03-31 20:30:06 - Double var_pop(NUMERIC arg)
2025-03-31 20:30:06 - Double var_samp(NUMERIC arg)
2025-03-31 20:30:06 - Double variance(NUMERIC arg)
2025-03-31 20:30:06 - Integer week(DATE arg)
2025-03-31 20:30:06 - Integer year(DATE arg)
2025-03-31 20:30:06 - Starting QueryInterpretationCache(2048)
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c88efec
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-03-31 20:30:06 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-31 20:30:06 - Configured EntityCopyObserver strategy: disallow
2025-03-31 20:30:06 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35ef5926
2025-03-31 20:30:06 - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-31 20:30:06 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.Role]: private accessor [role]
2025-03-31 20:30:06 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-31 20:30:06 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-31 20:30:06 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.User]: private accessor [age]
2025-03-31 20:30:06 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 - Skipping collection inserts - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - Skipping collection row deletions - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - Skipping collection removals - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - Starting post-init callbacks
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet)#finishInitialization
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet) - key descriptor
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.Role) `staticFetchableList` generator
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.User.roleSet#{element}]) - element descriptor
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet)#finishInitialization
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet) - key descriptor
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.User) `staticFetchableList` generator
2025-03-31 20:30:06 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-31 20:30:06 - Created new SQL alias : r1_0
2025-03-31 20:30:06 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-31 20:30:06 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role.role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-31 20:30:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-31 20:30:06 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.Role
2025-03-31 20:30:06 -  Version select: select id from roles where id=?
2025-03-31 20:30:06 -  Insert (0): insert into roles (role) values (?)
2025-03-31 20:30:06 -  Update (0): update roles set role=? where id=?
2025-03-31 20:30:06 -  Delete (0): delete from roles where id=?
2025-03-31 20:30:06 - Created new SQL alias : u1_0
2025-03-31 20:30:06 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:30:06 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-31 20:30:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:30:06 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.User
2025-03-31 20:30:06 -  Version select: select id from users where id=?
2025-03-31 20:30:06 -  Insert (0): insert into users (age,email,username,usernickname,password) values (?,?,?,?,?)
2025-03-31 20:30:06 -  Update (0): update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-31 20:30:06 -  Delete (0): delete from users where id=?
2025-03-31 20:30:06 - Created new SQL alias : rs1_0
2025-03-31 20:30:06 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.User.roleSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet] 
2025-03-31 20:30:06 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60688a97] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] 
2025-03-31 20:30:06 - Created new SQL alias : rs1_1
2025-03-31 20:30:06 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-31 20:30:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet) {
          primaryTableReference : user_roles as rs1_0
          TableGroupJoins {
             join LazyTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet.{element}) {
              primaryTableReference : roles as rs1_1
            }
          }
        }
      }
    }

2025-03-31 20:30:06 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:06 -  Row insert: insert into user_roles (user_id,role_id) values (?,?)
2025-03-31 20:30:06 -  Row delete: delete from user_roles where user_id=? and role_id=?
2025-03-31 20:30:06 -  One-shot delete: delete from user_roles where user_id=?
2025-03-31 20:30:06 - Created new SQL alias : us1_0
2025-03-31 20:30:06 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.Role.userSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet] 
2025-03-31 20:30:06 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6520625f] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] 
2025-03-31 20:30:06 - Created new SQL alias : us1_1
2025-03-31 20:30:06 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-31 20:30:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet) {
          primaryTableReference : user_roles as us1_0
          TableGroupJoins {
             join LazyTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet.{element}) {
              primaryTableReference : users as us1_1
            }
          }
        }
      }
    }

2025-03-31 20:30:06 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-31 20:30:06 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-31 20:30:06 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e0fdc83] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@382608d0]
2025-03-31 20:30:06 - Checking 0 named HQL queries
2025-03-31 20:30:06 - Checking 0 named SQL queries
2025-03-31 20:30:06 - No alter strings for table : roles
2025-03-31 20:30:06 - No alter strings for table : user_roles
2025-03-31 20:30:06 - No alter strings for table : users
2025-03-31 20:30:06 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@46146832
2025-03-31 20:30:06 - Registering SessionFactory: 859d7447-f8cc-4ee1-ad42-7c36b6c3f523 (<unnamed>)
2025-03-31 20:30:06 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-03-31 20:30:06 - Instantiated SessionFactory
2025-03-31 20:30:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 20:30:07 - Statistics initialized [enabled=false]
2025-03-31 20:30:07 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-31 20:30:07 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-31 20:30:07 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-31 20:30:07 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-03-31 20:30:07 - Adding welcome page template: index
2025-03-31 20:30:07 - 
	r.k.s.b.d.c.AdminController:
	{PATCH [/admin/user]}: update(User,BindingResult,int,List,Model)
	{POST [/admin]}: add(User,BindingResult,List,Model)
	{DELETE [/admin/user]}: delete(int)
	{GET [/admin/ref]}: ref(int,Model)
	{GET [/admin]}: showUsers(Model)
2025-03-31 20:30:07 - 
	r.k.s.b.d.c.NoAuthenticatedController:
	{GET [/index]}: goAdmin()
	{GET [/]}: goIndex(Model)
2025-03-31 20:30:07 - 
	r.k.s.b.d.c.UserController:
	{GET [/user]}: goUser(Model)
2025-03-31 20:30:07 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-31 20:30:07 - 10 mappings in 'requestMappingHandlerMapping'
2025-03-31 20:30:07 - 'viewControllerHandlerMapping' {/user=ParameterizableViewController [view="user"]}
2025-03-31 20:30:07 - 'beanNameHandlerMapping' {}
2025-03-31 20:30:07 - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-03-31 20:30:07 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-31 20:30:07 - Loaded expression factory via original TCCL
2025-03-31 20:30:07 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-03-31 20:30:07 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-03-31 20:30:07 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-31 20:30:07 - Trying to load META-INF/validation.xml via user class loader
2025-03-31 20:30:07 - Trying to load META-INF/validation.xml via TCCL
2025-03-31 20:30:07 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-31 20:30:07 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-31 20:30:07 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-31 20:30:07 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-31 20:30:07 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-31 20:30:07 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-31 20:30:07 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-31 20:30:07 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-31 20:30:07 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-31 20:30:07 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-31 20:30:07 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-31 20:30:07 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-31 20:30:07 - Starting ProtocolHandler ["http-nio-8080"]
2025-03-31 20:30:07 - Tomcat started on port 8080 (http) with context path '/'
2025-03-31 20:30:07 - Started SpringBootSecurityDemoApplication in 4.265 seconds (process running for 5.158)
2025-03-31 20:30:20 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-31 20:30:20 - Initializing Servlet 'dispatcherServlet'
2025-03-31 20:30:20 - Detected StandardServletMultipartResolver
2025-03-31 20:30:20 - Detected AcceptHeaderLocaleResolver
2025-03-31 20:30:20 - Detected FixedThemeResolver
2025-03-31 20:30:20 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@495a9305
2025-03-31 20:30:20 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@149ef64a
2025-03-31 20:30:20 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-31 20:30:20 - Completed initialization in 2 ms
2025-03-31 20:30:20 - Securing POST /login
2025-03-31 20:30:20 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:30:20 - begin
2025-03-31 20:30:20 - Created new SQL alias : u1_0
2025-03-31 20:30:20 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:30:20 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22824269
2025-03-31 20:30:20 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-31 20:30:20 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-31 20:30:20 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:30:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:20 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-31 20:30:20 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@2075642306 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@336641785 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:30:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:20 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:20 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User.roleSet -> SetInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet)@1121489829 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element} -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element})@869810248 (EntityCollectionPart(ru.kata.spring.boot_security.demo.models.User.roleSet#{element})@1861677811)
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet)@990998149 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-31 20:30:20 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:30:20 - committing
2025-03-31 20:30:20 - Processing flush-time cascades
2025-03-31 20:30:20 - Dirty checking collections
2025-03-31 20:30:20 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#5] (initialized)
2025-03-31 20:30:20 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-31 20:30:20 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-31 20:30:20 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-31 20:30:20 - Listing entities:
2025-03-31 20:30:20 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$VEiIWVPoyepML64TIfO21u2/TjFoQlEB1bIwGYyiFwnug31AMkcS6, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro@kata.com}
2025-03-31 20:30:20 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-31 20:30:20 - Failed to authenticate since password does not match stored value
2025-03-31 20:30:20 - Redirecting to /login?error
2025-03-31 20:30:20 - Securing GET /login?error
2025-03-31 20:30:20 - Securing GET /default-ui.css
2025-03-31 20:30:36 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-31 20:30:36 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-31 20:30:41 - Securing POST /login
2025-03-31 20:30:41 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:30:41 - begin
2025-03-31 20:30:41 - Created new SQL alias : u1_0
2025-03-31 20:30:41 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:30:41 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c335e44
2025-03-31 20:30:41 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-31 20:30:41 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-31 20:30:41 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:30:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:41 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-31 20:30:41 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@1123051770 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@771589893 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:30:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:41 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:41 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#31]
2025-03-31 20:30:41 - committing
2025-03-31 20:30:41 - Processing flush-time cascades
2025-03-31 20:30:41 - Dirty checking collections
2025-03-31 20:30:41 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#31], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#31] (initialized)
2025-03-31 20:30:41 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#1], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#1] (uninitialized)
2025-03-31 20:30:41 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-31 20:30:41 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-03-31 20:30:41 - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-03-31 20:30:41 - Listing entities:
2025-03-31 20:30:41 - ru.kata.spring.boot_security.demo.models.Role{role=USER, id=1, userSet=<uninitialized>}
2025-03-31 20:30:41 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-31 20:30:41 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$Qolx3QDAd6qb3hESF0MQauveCMd4/fjbg0NSe.oOu61M9H6lXhNrO, name=Ivan, nickname=Bober, id=31, roleSet=[ru.kata.spring.boot_security.demo.models.Role#1, ru.kata.spring.boot_security.demo.models.Role#2], age=19, email=ib@kata.com}
2025-03-31 20:30:41 - Authenticated user
2025-03-31 20:30:41 - Changed session id from 0A9265C7CD5FDEA941703CABC03BADEE
2025-03-31 20:30:41 - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@31906434]
2025-03-31 20:30:41 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]
2025-03-31 20:30:41 - Securing GET /admin
2025-03-31 20:30:41 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]]
2025-03-31 20:30:41 - Secured GET /admin
2025-03-31 20:30:41 - GET "/admin", parameters={}
2025-03-31 20:30:41 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-31 20:30:41 - HQL : from User WHERE id= :id
2025-03-31 20:30:41 - Encountered use of reserved word as identifier : =
2025-03-31 20:30:41 - Encountered use of reserved word as identifier : <EOF>
2025-03-31 20:30:41 - Unable to resolve unqualified attribute [id] in local from-clause
2025-03-31 20:30:41 - Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id)
2025-03-31 20:30:41 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `ru.kata.spring.boot_security.demo.models.User(5).id`
              :id
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-03-31 20:30:42 - Created new SQL alias : u1_0
2025-03-31 20:30:42 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(5))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:30:42 - Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2025-03-31 20:30:42 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id) 
2025-03-31 20:30:42 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(5)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(5).roleSet]

2025-03-31 20:30:42 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(5)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:42 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-31 20:30:42 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(5) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(5))@1875997052 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(5).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(5).roleSet)@2030434656 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:30:42 - HQL : FROM User
2025-03-31 20:30:42 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-03-31 20:30:42 - Created new SQL alias : u1_0
2025-03-31 20:30:42 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(6))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:30:42 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(6)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(6).roleSet]

2025-03-31 20:30:42 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(6)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:42 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-31 20:30:42 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(6) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(6))@1382142180 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(6).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(6).roleSet)@1202607921 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:30:42 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:30:42 - begin
2025-03-31 20:30:42 - Created new SQL alias : r1_0
2025-03-31 20:30:42 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(7))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-31 20:30:42 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(7)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(7).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(7).userSet]

2025-03-31 20:30:42 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(7)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:42 - select r1_0.id,r1_0.role from roles r1_0
2025-03-31 20:30:42 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(7) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(7))@1609997366 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(7).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(7).userSet)@502843735 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-31 20:30:42 - committing
2025-03-31 20:30:42 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-31 20:30:42 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-03-31 20:30:42 - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.3.RELEASE (built 2024-12-08T21:30:43+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect: SpringStandard (org.thymeleaf.spring6.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring6.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring6.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring6.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring6.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring6.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring6.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring6.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring6.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring6.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring6.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@131e0d71
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6f914361
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring6.expression.SpringStandardConversionService@18545051
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-03-31 20:30:42 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:42 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:42 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#31]
2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:42 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:42 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:42 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:42 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:42 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:42 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-31 20:30:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:42 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:42 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#33]
2025-03-31 20:30:42 - Completed 200 OK
2025-03-31 20:30:56 - Securing POST /admin/user
2025-03-31 20:30:56 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]]
2025-03-31 20:30:56 - Secured POST /admin/user
2025-03-31 20:30:56 - PATCH "/admin/user", parameters={masked}
2025-03-31 20:30:56 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#update(User, BindingResult, int, List, Model)
2025-03-31 20:30:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:30:56 - begin
2025-03-31 20:30:56 - Created new SQL alias : r1_0
2025-03-31 20:30:56 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(8))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-31 20:30:56 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2938e71c
2025-03-31 20:30:56 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.Role(8).id) 
2025-03-31 20:30:56 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(8)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(8).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(8).userSet]

2025-03-31 20:30:56 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(8)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-31 20:30:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:56 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id in (?)
2025-03-31 20:30:56 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(8) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(8))@1948203409 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(8).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(8).userSet)@2118025856 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-31 20:30:56 - committing
2025-03-31 20:30:56 - begin
2025-03-31 20:30:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:56 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-31 20:30:56 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User)@2145585802 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User.roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet)@970460735 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:30:56 - committing
2025-03-31 20:30:56 - Processing flush-time cascades
2025-03-31 20:30:56 - Dirty checking collections
2025-03-31 20:30:56 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-31 20:30:56 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [<unreferenced>] (initialized)
2025-03-31 20:30:56 - Collection dereferenced: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:30:56 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2025-03-31 20:30:56 - Flushed: 1 (re)creations, 0 updates, 1 removals to 3 collections
2025-03-31 20:30:56 - Listing entities:
2025-03-31 20:30:56 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$LtCfMAVuNoIJcAvJAEBATOOISiNqUmIKhZdfegyvn4HLB0BgTiB2i, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro@kata.com}
2025-03-31 20:30:56 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-31 20:30:57 - update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-31 20:30:57 - Deleting collection - ru.kata.spring.boot_security.demo.models.User.roleSet : 5
2025-03-31 20:30:57 - delete from user_roles where user_id=?
2025-03-31 20:30:57 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 5
2025-03-31 20:30:57 - insert into user_roles (user_id,role_id) values (?,?)
2025-03-31 20:30:57 - Done inserting `1` collection rows : ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-31 20:30:57 - View name [redirect:], model {}
2025-03-31 20:30:57 - Completed 302 FOUND
2025-03-31 20:30:57 - Securing GET /admin
2025-03-31 20:30:57 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]]
2025-03-31 20:30:57 - Secured GET /admin
2025-03-31 20:30:57 - GET "/admin", parameters={}
2025-03-31 20:30:57 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:57 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:57 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-31 20:30:57 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:30:57 - begin
2025-03-31 20:30:57 - Created new SQL alias : r1_0
2025-03-31 20:30:57 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(9))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-31 20:30:57 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(9)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(9).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(9).userSet]

2025-03-31 20:30:57 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(9)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:30:57 - select r1_0.id,r1_0.role from roles r1_0
2025-03-31 20:30:57 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(9) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(9))@1996065706 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(9).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(9).userSet)@643810377 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-31 20:30:57 - committing
2025-03-31 20:30:57 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:57 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:57 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#31]
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:57 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:57 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:57 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:57 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:57 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:57 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-31 20:30:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:30:57 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:30:57 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#33]
2025-03-31 20:30:57 - Completed 200 OK
2025-03-31 20:31:01 - Securing GET /logout
2025-03-31 20:31:01 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]]
2025-03-31 20:31:01 - Logging out [UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@531afa49, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=0A9265C7CD5FDEA941703CABC03BADEE], Granted Authorities=[USER, ADMIN]]]
2025-03-31 20:31:01 - Invalidated session 14D984917BCA72ED7DD3A6A792130D07
2025-03-31 20:31:01 - Redirecting to /login?logout
2025-03-31 20:31:01 - Securing GET /login?logout
2025-03-31 20:31:02 - Securing GET /default-ui.css
2025-03-31 20:31:06 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-31 20:31:06 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-31 20:31:07 - Securing POST /login
2025-03-31 20:31:07 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:31:07 - begin
2025-03-31 20:31:07 - Created new SQL alias : u1_0
2025-03-31 20:31:07 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-31 20:31:07 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30aac54f
2025-03-31 20:31:07 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-31 20:31:07 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-31 20:31:07 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:31:07 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-31 20:31:07 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@722805420 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@1372503308 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:31:07 - committing
2025-03-31 20:31:07 - Processing flush-time cascades
2025-03-31 20:31:07 - Dirty checking collections
2025-03-31 20:31:07 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#5] (initialized)
2025-03-31 20:31:07 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-31 20:31:07 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-31 20:31:07 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-31 20:31:07 - Listing entities:
2025-03-31 20:31:07 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$LtCfMAVuNoIJcAvJAEBATOOISiNqUmIKhZdfegyvn4HLB0BgTiB2i, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro@kata.com}
2025-03-31 20:31:07 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-31 20:31:07 - Authenticated user
2025-03-31 20:31:07 - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@762d5b85, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@1424bf33]
2025-03-31 20:31:07 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@762d5b85, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ADMIN]]
2025-03-31 20:31:07 - Securing GET /admin
2025-03-31 20:31:07 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@762d5b85, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ADMIN]]]
2025-03-31 20:31:07 - Secured GET /admin
2025-03-31 20:31:07 - GET "/admin", parameters={}
2025-03-31 20:31:07 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:31:07 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:31:07 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-31 20:31:07 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-31 20:31:07 - begin
2025-03-31 20:31:07 - Created new SQL alias : r1_0
2025-03-31 20:31:07 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(10))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-31 20:31:07 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(10)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(10).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(10).userSet]

2025-03-31 20:31:07 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(10)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-31 20:31:07 - select r1_0.id,r1_0.role from roles r1_0
2025-03-31 20:31:07 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(10).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(10).userSet)@252661954 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))
	  ru.kata.spring.boot_security.demo.models.Role(10) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(10))@774110999 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))

2025-03-31 20:31:07 - committing
2025-03-31 20:31:07 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#31]
2025-03-31 20:31:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-31 20:31:07 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-31 20:31:07 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#33]
2025-03-31 20:31:07 - Completed 200 OK
2025-03-31 20:31:11 - Securing GET /logout
2025-03-31 20:31:11 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@762d5b85, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ADMIN]]]
2025-03-31 20:31:11 - Logging out [UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@762d5b85, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ADMIN]]]
2025-03-31 20:31:11 - Invalidated session D217774359AD957962FCE4ED97FCDBE4
2025-03-31 20:31:11 - Redirecting to /login?logout
2025-03-31 20:31:11 - Securing GET /login?logout
2025-03-31 20:31:11 - Securing GET /default-ui.css
2025-03-31 20:31:13 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-31 20:31:13 - Graceful shutdown complete
2025-03-31 20:31:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-31 20:31:13 - HHH000031: Closing
2025-03-31 20:31:13 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5dc6b5cc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@382608d0]
2025-03-31 20:31:13 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-03-31 20:31:13 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-03-31 20:31:13 - HikariPool-1 - Shutdown initiated...
2025-03-31 20:31:13 - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@24fef542: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@51154714: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@10284d2f: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21f29a51: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7007b260: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3d911f3e: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7449aed6: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@685a8f97: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6c88efec: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@35ef5926: (connection evicted)
2025-03-31 20:31:13 - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-03-31 20:31:13 - HikariPool-1 - Shutdown completed.

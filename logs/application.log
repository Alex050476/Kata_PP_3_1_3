2025-03-21 17:05:58 - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-03-21 17:05:58 - HV000001: Hibernate Validator 8.0.2.Final
2025-03-21 17:05:58 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:05:58 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:05:58 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:05:58 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:05:58 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:05:58 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:05:58 - Loaded expression factory via original TCCL
2025-03-21 17:05:58 - Starting SpringBootSecurityDemoApplication using Java 23.0.2 with PID 323396 (C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes started by Alexey in C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap)
2025-03-21 17:05:58 - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-21 17:05:58 - No active profile set, falling back to 1 default profile: "default"
2025-03-21 17:05:58 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:05:58 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:05:58 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:05:58 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:05:58 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:05:58 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:05:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-21 17:05:59 - Finished Spring Data repository scanning in 59 ms. Found 2 JPA repository interfaces.
2025-03-21 17:06:00 - Tomcat initialized with port 8080 (http)
2025-03-21 17:06:00 - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-21 17:06:00 - Starting service [Tomcat]
2025-03-21 17:06:00 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-21 17:06:00 - Initializing Spring embedded WebApplicationContext
2025-03-21 17:06:00 - Root WebApplicationContext: initialization completed in 1443 ms
2025-03-21 17:06:00 - Filter 'hiddenHttpMethodFilter' configured for use
2025-03-21 17:06:00 - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
2025-03-21 17:06:00 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b5%d0%b9/Java_study/Kata_PP_3_1_3_BS_Bootstrap/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.kata.spring.boot_security.demo.models.Role
		ru.kata.spring.boot_security.demo.models.User]
	Mapping files names []
	Properties []
2025-03-21 17:06:00 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-03-21 17:06:00 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-03-21 17:06:00 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-21 17:06:00 - HHH000206: 'hibernate.properties' not found
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:06:00 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-03-21 17:06:00 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-03-21 17:06:00 - HHH000026: Second-level cache disabled
2025-03-21 17:06:00 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:06:00 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:06:00 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:06:00 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:06:00 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:06:00 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:06:00 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:06:00 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:06:00 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:06:00 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:06:00 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:06:00 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:06:00 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@73d62b5
2025-03-21 17:06:00 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@73d62b5
2025-03-21 17:06:00 - Adding type registration image -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:06:00 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:06:00 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:06:00 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-21 17:06:00 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-21 17:06:00 - Adding type registration short -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:06:00 - Adding type registration short -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:06:00 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:06:00 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:06:00 - Adding type registration int -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:06:00 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:06:00 - Adding type registration long -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:06:00 - Adding type registration long -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:06:00 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:06:00 - Adding type registration float -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:06:00 - Adding type registration float -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:06:00 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:06:00 - Adding type registration double -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-21 17:06:00 - Adding type registration double -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-21 17:06:00 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-21 17:06:00 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-21 17:06:00 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-21 17:06:00 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2b7facc7
2025-03-21 17:06:00 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2b7facc7
2025-03-21 17:06:00 - Adding type registration character -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:06:00 - Adding type registration char -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:06:00 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:06:00 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@24197b13
2025-03-21 17:06:00 - Adding type registration string -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-21 17:06:00 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-21 17:06:00 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2776fd8f
2025-03-21 17:06:00 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:06:00 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:06:00 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:06:00 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-21 17:06:00 - Adding type registration text -> org.hibernate.type.BasicTypeReference@49b89425
2025-03-21 17:06:00 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@59328218
2025-03-21 17:06:00 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-21 17:06:00 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-21 17:06:00 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@478967eb
2025-03-21 17:06:00 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@478967eb
2025-03-21 17:06:00 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4a1dda83
2025-03-21 17:06:00 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f2b39a
2025-03-21 17:06:00 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-21 17:06:00 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-21 17:06:00 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@52621501
2025-03-21 17:06:00 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-21 17:06:00 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:06:00 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:06:00 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:06:00 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:06:00 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:06:00 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:06:00 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-21 17:06:00 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-21 17:06:00 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14457a95
2025-03-21 17:06:00 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14457a95
2025-03-21 17:06:00 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48567727
2025-03-21 17:06:00 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10e9a5fe
2025-03-21 17:06:00 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:06:00 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:06:00 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1abcd059
2025-03-21 17:06:00 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61a87366
2025-03-21 17:06:00 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-21 17:06:00 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:06:00 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:06:00 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:06:00 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:06:00 - Adding type registration date -> org.hibernate.type.BasicTypeReference@70091872
2025-03-21 17:06:00 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70091872
2025-03-21 17:06:00 - Adding type registration time -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-21 17:06:00 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-21 17:06:00 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:06:00 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:06:00 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:06:00 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:06:00 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:06:00 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:06:00 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7c0df4ab
2025-03-21 17:06:00 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2e362407
2025-03-21 17:06:00 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-21 17:06:00 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-21 17:06:00 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:06:00 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:06:00 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:06:00 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@17fbfb02
2025-03-21 17:06:00 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@8f2e3e6
2025-03-21 17:06:00 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-21 17:06:00 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-21 17:06:00 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-21 17:06:00 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-21 17:06:00 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-21 17:06:00 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-21 17:06:00 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-21 17:06:00 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3b170235
2025-03-21 17:06:00 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3b170235
2025-03-21 17:06:00 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5e9bf744
2025-03-21 17:06:00 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5e9bf744
2025-03-21 17:06:00 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@45e140ae
2025-03-21 17:06:00 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@45e140ae
2025-03-21 17:06:00 - Adding type registration url -> org.hibernate.type.BasicTypeReference@48cdb156
2025-03-21 17:06:00 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@48cdb156
2025-03-21 17:06:00 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b4814d0
2025-03-21 17:06:00 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@4ae8fb2a
2025-03-21 17:06:00 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@54326e9
2025-03-21 17:06:00 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@20216016
2025-03-21 17:06:00 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b441e56
2025-03-21 17:06:00 - Adding type registration object -> org.hibernate.type.JavaObjectType@5d9d2119
2025-03-21 17:06:00 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d9d2119
2025-03-21 17:06:00 - Adding type registration null -> org.hibernate.type.NullType@250967f1
2025-03-21 17:06:00 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25c1f5ee
2025-03-21 17:06:00 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4bce62b
2025-03-21 17:06:00 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7bf018dd
2025-03-21 17:06:00 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@15a8cebd
2025-03-21 17:06:00 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f6c2763
2025-03-21 17:06:00 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c82031b
2025-03-21 17:06:00 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@274fdea6
2025-03-21 17:06:00 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@74c121d4
2025-03-21 17:06:00 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@589fb74d] into BootstrapContext; was [null]
2025-03-21 17:06:00 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@589fb74d) [was null]
2025-03-21 17:06:00 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7f42b194] into BootstrapContext; was [null]
2025-03-21 17:06:00 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@8eb6f9a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@29170a47]
2025-03-21 17:06:00 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-21 17:06:00 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@589fb74d]
2025-03-21 17:06:00 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@589fb74d]
2025-03-21 17:06:00 - HikariPool-1 - configuration:
2025-03-21 17:06:00 - allowPoolSuspension.............false
2025-03-21 17:06:00 - autoCommit......................true
2025-03-21 17:06:00 - catalog.........................none
2025-03-21 17:06:00 - connectionInitSql...............none
2025-03-21 17:06:00 - connectionTestQuery.............none
2025-03-21 17:06:00 - connectionTimeout...............30000
2025-03-21 17:06:00 - dataSource......................none
2025-03-21 17:06:00 - dataSourceClassName.............none
2025-03-21 17:06:00 - dataSourceJNDI..................none
2025-03-21 17:06:00 - dataSourceProperties............{password=<masked>}
2025-03-21 17:06:00 - driverClassName................."com.mysql.cj.jdbc.Driver"
2025-03-21 17:06:00 - exceptionOverrideClassName......none
2025-03-21 17:06:00 - healthCheckProperties...........{}
2025-03-21 17:06:00 - healthCheckRegistry.............none
2025-03-21 17:06:00 - idleTimeout.....................600000
2025-03-21 17:06:00 - initializationFailTimeout.......1
2025-03-21 17:06:00 - isolateInternalQueries..........false
2025-03-21 17:06:00 - jdbcUrl.........................jdbc:mysql://localhost:3306/mypp231db?allowPublicKeyRetrieval=TRUE&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
2025-03-21 17:06:00 - keepaliveTime...................0
2025-03-21 17:06:00 - leakDetectionThreshold..........0
2025-03-21 17:06:00 - maxLifetime.....................1800000
2025-03-21 17:06:00 - maximumPoolSize.................10
2025-03-21 17:06:00 - metricRegistry..................none
2025-03-21 17:06:00 - metricsTrackerFactory...........none
2025-03-21 17:06:00 - minimumIdle.....................10
2025-03-21 17:06:00 - password........................<masked>
2025-03-21 17:06:00 - poolName........................"HikariPool-1"
2025-03-21 17:06:00 - readOnly........................false
2025-03-21 17:06:00 - registerMbeans..................false
2025-03-21 17:06:00 - scheduledExecutor...............none
2025-03-21 17:06:00 - schema..........................none
2025-03-21 17:06:00 - threadFactory...................internal
2025-03-21 17:06:00 - transactionIsolation............default
2025-03-21 17:06:00 - username........................"root"
2025-03-21 17:06:00 - validationTimeout...............5000
2025-03-21 17:06:00 - HikariPool-1 - Starting...
2025-03-21 17:06:00 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44ddb518
2025-03-21 17:06:00 - HikariPool-1 - Start completed.
2025-03-21 17:06:00 - Database ->
	   name : MySQL
	version : 8.0.38
	  major : 8
	  minor : 0
2025-03-21 17:06:00 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-03-21 17:06:00 - JDBC version : 4.2
2025-03-21 17:06:00 - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-21 17:06:00 - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.38
2025-03-21 17:06:00 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-03-21 17:06:00 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-03-21 17:06:00 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.38
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-21 17:06:00 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee2423) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@343d1d25)
2025-03-21 17:06:00 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@762da62b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e5c5e6)
2025-03-21 17:06:00 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76dc36e5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a54c92e)
2025-03-21 17:06:00 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31533eb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fb71788)
2025-03-21 17:06:00 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8cb7185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dac40b)
2025-03-21 17:06:00 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c54c497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b788dc2)
2025-03-21 17:06:00 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58ec8271) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a44effb)
2025-03-21 17:06:00 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ee258) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f676900)
2025-03-21 17:06:00 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a49597) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5eb2972f)
2025-03-21 17:06:00 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-03-21 17:06:00 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-03-21 17:06:00 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-03-21 17:06:00 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-03-21 17:06:00 - Adding type registration null -> org.hibernate.type.NullType@6b0325d0
2025-03-21 17:06:00 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@250967f1`
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-03-21 17:06:00 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:06:00 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:06:00 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:06:00 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:06:00 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:06:00 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:06:00 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:06:00 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:06:00 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:06:00 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dacf18d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@432a6a69]
2025-03-21 17:06:00 - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-03-21 17:06:00 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2860d11c
2025-03-21 17:06:00 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-03-21 17:06:00 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:06:00 - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-03-21 17:06:00 - Import with entity name Role
2025-03-21 17:06:00 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@695ddb27
2025-03-21 17:06:00 - Bind entity ru.kata.spring.boot_security.demo.models.Role on table roles
2025-03-21 17:06:00 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:06:01 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58fe10a5
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:id]
2025-03-21 17:06:01 - building BasicValue for id
2025-03-21 17:06:01 - Skipping column re-registration: roles.id
2025-03-21 17:06:01 - Building property id
2025-03-21 17:06:01 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='role')
2025-03-21 17:06:01 - MetadataSourceProcessor property role with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:role]
2025-03-21 17:06:01 - building BasicValue for role
2025-03-21 17:06:01 - Skipping column re-registration: roles.role
2025-03-21 17:06:01 - Building property role
2025-03-21 17:06:01 - Binding column: IndexColumn(column='userSet_ORDER')
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='userSet_KEY')
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn(column='userSet_KEY')
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-03-21 17:06:01 - Collection role: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Building property userSet
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9722468
2025-03-21 17:06:01 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:06:01 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:06:01 - Import with entity name User
2025-03-21 17:06:01 - Bind entity ru.kata.spring.boot_security.demo.models.User on table users
2025-03-21 17:06:01 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:06:01 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:id]
2025-03-21 17:06:01 - building BasicValue for id
2025-03-21 17:06:01 - Skipping column re-registration: users.id
2025-03-21 17:06:01 - Building property id
2025-03-21 17:06:01 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='age')
2025-03-21 17:06:01 - MetadataSourceProcessor property age with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:age]
2025-03-21 17:06:01 - building BasicValue for age
2025-03-21 17:06:01 - Skipping column re-registration: users.age
2025-03-21 17:06:01 - Building property age
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - MetadataSourceProcessor property email with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:email]
2025-03-21 17:06:01 - building BasicValue for email
2025-03-21 17:06:01 - Skipping column re-registration: users.email
2025-03-21 17:06:01 - Building property email
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='username')
2025-03-21 17:06:01 - MetadataSourceProcessor property name with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:name]
2025-03-21 17:06:01 - building BasicValue for name
2025-03-21 17:06:01 - Skipping column re-registration: users.username
2025-03-21 17:06:01 - Building property name
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='usernickname')
2025-03-21 17:06:01 - MetadataSourceProcessor property nickname with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:nickname]
2025-03-21 17:06:01 - building BasicValue for nickname
2025-03-21 17:06:01 - Skipping column re-registration: users.usernickname
2025-03-21 17:06:01 - Building property nickname
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - MetadataSourceProcessor property password with lazy=false
2025-03-21 17:06:01 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:password]
2025-03-21 17:06:01 - building BasicValue for password
2025-03-21 17:06:01 - Skipping column re-registration: users.password
2025-03-21 17:06:01 - Building property password
2025-03-21 17:06:01 - Binding column: IndexColumn(column='roleSet_ORDER')
2025-03-21 17:06:01 - Binding column: AnnotatedColumn()
2025-03-21 17:06:01 - Binding column: AnnotatedColumn(column='roleSet_KEY')
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn(column='roleSet_KEY')
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-03-21 17:06:01 - Binding column: AnnotatedJoinColumn(column='role_id')
2025-03-21 17:06:01 - Collection role: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 - Building property roleSet
2025-03-21 17:06:01 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for role
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for age
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for nickname
2025-03-21 17:06:01 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-03-21 17:06:01 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
2025-03-21 17:06:01 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-03-21 17:06:01 - Second pass for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:06:01 - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:06:01 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:06:01 - Mapped collection key: user_id, element: role_id
2025-03-21 17:06:01 - Second pass for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:06:01 - Retrieving property ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 - Mapped collection key: role_id, element: user_id
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11934c83
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d3c59a3
2025-03-21 17:06:01 - Building session factory
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3ff844dd
2025-03-21 17:06:01 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:06:01 - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@390a7532, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.4.2\spring-boot-starter-thymeleaf-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.2\spring-boot-starter-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.2\spring-boot-autoconfigure-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.2\spring-boot-starter-logging-3.4.2.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\Алексей\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Алексей\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.3.RELEASE\thymeleaf-spring6-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf\3.1.3.RELEASE\thymeleaf-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.2\spring-boot-starter-web-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.2\spring-boot-starter-json-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.2\spring-boot-starter-tomcat-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-web\6.2.2\spring-web-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-beans\6.2.2\spring-beans-6.2.2.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-observation\1.14.3\micrometer-observation-1.14.3.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-commons\1.14.3\micrometer-commons-1.14.3.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-webmvc\6.2.2\spring-webmvc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-context\6.2.2\spring-context-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-expression\6.2.2\spring-expression-6.2.2.jar;C:\Users\Алексей\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Алексей\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Алексей\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-core\6.2.2\spring-core-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jcl\6.2.2\spring-jcl-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.2\spring-boot-starter-security-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aop\6.2.2\spring-aop-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.2\spring-boot-starter-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\hibernate\orm\hibernate-core\6.6.5.Final\hibernate-core-6.6.5.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Алексей\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Алексей\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Алексей\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Алексей\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Алексей\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-jpa\3.4.2\spring-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-commons\3.4.2\spring-data-commons-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-orm\6.2.2\spring-orm-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-tx\6.2.2\spring-tx-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aspects\6.2.2\spring-aspects-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.2\spring-boot-starter-jdbc-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jdbc\6.2.2\spring-jdbc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.2\spring-boot-starter-validation-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Алексей\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Baku, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 11, APPLICATION_NAME=Kata_3_1_2_S_Boot, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin, sun.java.command=ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@595184d8, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\Алексей, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\Алексей\.jdks\openjdk-23.0.2, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=Alexey, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\CD86~1\AppData\Local\Temp\, catalina.home=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.637368950439614884, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=323396, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.637368950439614884, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7d49a1a0, native.encoding=Cp1251, java.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\app\18c\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\app\apache-maven-3.9.8\bin;C:\Users\Алексей\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.4\bin;;C:\Microsoft VS Code\bin;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7-58, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=67.0, LOGGED_APPLICATION_NAME=[Kata_3_1_2_S_Boot] }
2025-03-21 17:06:01 - Session factory constructed with filter configurations : {}
2025-03-21 17:06:01 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:06:01 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:06:01 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:06:01 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:06:01 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:06:01 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:06:01 - Loaded expression factory via original TCCL
2025-03-21 17:06:01 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:06:01 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:06:01 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:06:01 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:06:01 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:06:01 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e5d800f
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:06:01 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-03-21 17:06:01 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e5c936
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@20556566] under count; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@32d8710a] under every; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@180cc0df] under any; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@215c6ec0] under sinh; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b19b346] under cosh; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5b8e8] under tanh; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@706d2bae] under pi; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3205610d] under log; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : length -> character_length
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@73e93c3a] under position; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@33f2cf82] under overlay; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7ae0a26] under trim; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7030b74c] under cast; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27d6267e] under collate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@637506d8] under extract; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@18f4086e] under ifnull; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5cf3a7f9] under pad; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2d0778d0] under str; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20b67366] under format; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7affee54] under timestampadd; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5bba9949] under timestampdiff; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : dateadd -> timestampadd
2025-03-21 17:06:01 - Registering alternate key : datediff -> timestampdiff
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7474196] under current_date; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11ee671f] under current_time; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18209303] under current_timestamp; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : current date -> current_date
2025-03-21 17:06:01 - Registering alternate key : current time -> current_time
2025-03-21 17:06:01 - Registering alternate key : current timestamp -> current_timestamp
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57df09a7] under local_date; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa9a93b] under local_time; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@81dfdee] under local_datetime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@14b9df65] under offset_datetime; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : local date -> local_date
2025-03-21 17:06:01 - Registering alternate key : local time -> local_time
2025-03-21 17:06:01 - Registering alternate key : local datetime -> local_datetime
2025-03-21 17:06:01 - Registering alternate key : offset datetime -> offset_datetime
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b046e64] under instant; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : current_instant -> instant
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3921135e] under sql; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3205610d
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1479ed5a] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3211cc84] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : day -> dayofmonth
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d2eb7fa] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@73e93c3a
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@671f545b] under trunc; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : truncate -> trunc
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c335b9] under bitand; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c8d8e7] under bitor; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c68e82] under bitxor; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e66bf2d] under bitnot; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7112fa5] under format; prior registration was org.hibernate.dialect.function.FormatFunction@20b67366
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6aa9a93b
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@81dfdee
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@342dc040] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@706d2bae
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a8ead9] under chr; prior registration was null
2025-03-21 17:06:01 - Registering alternate key : char -> chr
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@281ca256] under sysdate; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6a63ff31] under rank; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1c4aa701] under dense_rank; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6f36267d] under percent_rank; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@788a0513] under cume_dist; prior registration was null
2025-03-21 17:06:01 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@320fc4b0] under listagg; prior registration was null
2025-03-21 17:06:01 - abs(NUMERIC arg)
2025-03-21 17:06:01 - Double acos(NUMERIC arg)
2025-03-21 17:06:01 - adddate(DATE datetime, INTEGER days)
2025-03-21 17:06:01 - addtime(TIME datetime, TIME time)
2025-03-21 17:06:01 - Boolean any(BOOLEAN arg)
2025-03-21 17:06:01 - Integer ascii(STRING arg)
2025-03-21 17:06:01 - Double asin(NUMERIC arg)
2025-03-21 17:06:01 - Double atan(NUMERIC arg)
2025-03-21 17:06:01 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:06:01 - avg(arg)
2025-03-21 17:06:01 - bit_and(arg)
2025-03-21 17:06:01 - Integer bit_length(STRING_OR_CLOB arg)
2025-03-21 17:06:01 - bit_or(arg)
2025-03-21 17:06:01 - bitand(arg0, arg1)
2025-03-21 17:06:01 - bitnot(arg)
2025-03-21 17:06:01 - bitor(arg0, arg1)
2025-03-21 17:06:01 - bitxor(arg0, arg1)
2025-03-21 17:06:01 - cast(arg as Type)
2025-03-21 17:06:01 - ceiling(NUMERIC arg)
2025-03-21 17:06:01 - Character char(INTEGER arg)
2025-03-21 17:06:01 - Integer character_length(STRING_OR_CLOB arg)
2025-03-21 17:06:01 - Character chr(INTEGER arg)
2025-03-21 17:06:01 - coalesce(arg0[, arg1[, ...]])
2025-03-21 17:06:01 - String collate(STRING string as COLLATION collation)
2025-03-21 17:06:01 - String concat(STRING string0[, STRING string1[, ...]])
2025-03-21 17:06:01 - Double cos(NUMERIC arg)
2025-03-21 17:06:01 - Double cosh(NUMERIC arg)
2025-03-21 17:06:01 - Double cot(NUMERIC arg)
2025-03-21 17:06:01 - Long count([distinct ]{arg|*})
2025-03-21 17:06:01 - Integer crc32(arg)
2025-03-21 17:06:01 - Double cume_dist([arg0[, ...]])
2025-03-21 17:06:01 - Date curdate()
2025-03-21 17:06:01 - Date current date
2025-03-21 17:06:01 - Time current time
2025-03-21 17:06:01 - Timestamp current timestamp
2025-03-21 17:06:01 - Date current_date
2025-03-21 17:06:01 - Instant current_instant
2025-03-21 17:06:01 - Time current_time
2025-03-21 17:06:01 - Timestamp current_timestamp
2025-03-21 17:06:01 - Time curtime()
2025-03-21 17:06:01 - Date date(arg)
2025-03-21 17:06:01 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:06:01 - Integer datediff(DATE end, DATE start)
2025-03-21 17:06:01 - Integer day(DATE arg)
2025-03-21 17:06:01 - String dayname(DATE arg)
2025-03-21 17:06:01 - Integer dayofmonth(DATE arg)
2025-03-21 17:06:01 - Integer dayofweek(DATE arg)
2025-03-21 17:06:01 - Integer dayofyear(DATE arg)
2025-03-21 17:06:01 - Double degrees(NUMERIC arg)
2025-03-21 17:06:01 - Long dense_rank([arg0[, ...]])
2025-03-21 17:06:01 - Boolean every(BOOLEAN arg)
2025-03-21 17:06:01 - Double exp(NUMERIC arg)
2025-03-21 17:06:01 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-03-21 17:06:01 - first_valueANY value
2025-03-21 17:06:01 - floor(NUMERIC arg)
2025-03-21 17:06:01 - String format(TEMPORAL datetime as STRING pattern)
2025-03-21 17:06:01 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:06:01 - Integer hour(TIME arg)
2025-03-21 17:06:01 - ifnull(arg0, arg1)
2025-03-21 17:06:01 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-03-21 17:06:01 - Instant instant
2025-03-21 17:06:01 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-03-21 17:06:01 - lagANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:06:01 - Date last_day(DATE arg)
2025-03-21 17:06:01 - last_valueANY value
2025-03-21 17:06:01 - leadANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:06:01 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:06:01 - String left(STRING string, INTEGER length)
2025-03-21 17:06:01 - Integer length(STRING_OR_CLOB arg)
2025-03-21 17:06:01 - String listagg(STRING arg0, STRING arg1)
2025-03-21 17:06:01 - Double ln(NUMERIC arg)
2025-03-21 17:06:01 - LocalDate local date
2025-03-21 17:06:01 - LocalDateTime local datetime
2025-03-21 17:06:01 - LocalTime local time
2025-03-21 17:06:01 - LocalDate local_date
2025-03-21 17:06:01 - LocalDateTime local_datetime
2025-03-21 17:06:01 - LocalTime local_time
2025-03-21 17:06:01 - Timestamp localtime
2025-03-21 17:06:01 - Timestamp localtimestamp
2025-03-21 17:06:01 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-03-21 17:06:01 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-03-21 17:06:01 - Double log10(NUMERIC arg)
2025-03-21 17:06:01 - Double log2(NUMERIC arg)
2025-03-21 17:06:01 - String lower(STRING string)
2025-03-21 17:06:01 - String lpad(string, length[, padding])
2025-03-21 17:06:01 - String ltrim(STRING string[, STRING characters])
2025-03-21 17:06:01 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-03-21 17:06:01 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-03-21 17:06:01 - max(COMPARABLE arg)
2025-03-21 17:06:01 - String md5(arg)
2025-03-21 17:06:01 - Integer microsecond(TIME arg)
2025-03-21 17:06:01 - min(COMPARABLE arg)
2025-03-21 17:06:01 - Integer minute(TIME arg)
2025-03-21 17:06:01 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-03-21 17:06:01 - Integer month(DATE arg)
2025-03-21 17:06:01 - String monthname(DATE arg)
2025-03-21 17:06:01 - Timestamp now()
2025-03-21 17:06:01 - nth_valueANY value, INTEGER nth
2025-03-21 17:06:01 - nullif(arg0, arg1)
2025-03-21 17:06:01 - Integer octet_length(STRING_OR_CLOB arg)
2025-03-21 17:06:01 - OffsetDateTime offset datetime
2025-03-21 17:06:01 - OffsetDateTime offset_datetime
2025-03-21 17:06:01 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-03-21 17:06:01 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-03-21 17:06:01 - Double percent_rank([arg0[, ...]])
2025-03-21 17:06:01 - Double pi
2025-03-21 17:06:01 - Integer position(STRING pattern in STRING string)
2025-03-21 17:06:01 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:06:01 - Integer quarter(DATE arg)
2025-03-21 17:06:01 - Double radians(NUMERIC arg)
2025-03-21 17:06:01 - Double rand([INTEGER seed])
2025-03-21 17:06:01 - Long rank([arg0[, ...]])
2025-03-21 17:06:01 - String repeat(STRING string, INTEGER times)
2025-03-21 17:06:01 - String replace(STRING string, STRING pattern, STRING replacement)
2025-03-21 17:06:01 - String reverse(STRING arg)
2025-03-21 17:06:01 - String right(STRING string, INTEGER length)
2025-03-21 17:06:01 - round(NUMERIC number[, INTEGER places])
2025-03-21 17:06:01 - Long row_number()
2025-03-21 17:06:01 - String rpad(string, length[, padding])
2025-03-21 17:06:01 - String rtrim(STRING string[, STRING characters])
2025-03-21 17:06:01 - Integer second(TIME arg)
2025-03-21 17:06:01 - String sha(arg)
2025-03-21 17:06:01 - String sha1(arg)
2025-03-21 17:06:01 - String sha2(arg0, arg1)
2025-03-21 17:06:01 - Integer sign(NUMERIC arg)
2025-03-21 17:06:01 - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:06:01 - Double sin(NUMERIC arg)
2025-03-21 17:06:01 - Double sinh(NUMERIC arg)
2025-03-21 17:06:01 - String soundex(arg)
2025-03-21 17:06:01 - String space(INTEGER arg)
2025-03-21 17:06:01 - Object sql
2025-03-21 17:06:01 - Double sqrt(NUMERIC arg)
2025-03-21 17:06:01 - Double stddev(NUMERIC arg)
2025-03-21 17:06:01 - Double stddev_pop(NUMERIC arg)
2025-03-21 17:06:01 - Double stddev_samp(NUMERIC arg)
2025-03-21 17:06:01 - String str(arg)
2025-03-21 17:06:01 - subdate(DATE datetime, INTEGER days)
2025-03-21 17:06:01 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-03-21 17:06:01 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-03-21 17:06:01 - subtime(TIME datetime, TIME time)
2025-03-21 17:06:01 - sum(arg)
2025-03-21 17:06:01 - Timestamp sysdate()
2025-03-21 17:06:01 - Double tan(NUMERIC arg)
2025-03-21 17:06:01 - Double tanh(NUMERIC arg)
2025-03-21 17:06:01 - String time(arg)
2025-03-21 17:06:01 - Timestamp timestamp(arg0[, arg1])
2025-03-21 17:06:01 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:06:01 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-03-21 17:06:01 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-03-21 17:06:01 - trunc( ... )
2025-03-21 17:06:01 - truncate( ... )
2025-03-21 17:06:01 - String upper(STRING string)
2025-03-21 17:06:01 - Date utc_date
2025-03-21 17:06:01 - Time utc_time
2025-03-21 17:06:01 - Timestamp utc_timestamp
2025-03-21 17:06:01 - Double var_pop(NUMERIC arg)
2025-03-21 17:06:01 - Double var_samp(NUMERIC arg)
2025-03-21 17:06:01 - Double variance(NUMERIC arg)
2025-03-21 17:06:01 - Integer week(DATE arg)
2025-03-21 17:06:01 - Integer year(DATE arg)
2025-03-21 17:06:01 - Starting QueryInterpretationCache(2048)
2025-03-21 17:06:01 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:06:01 - Configured EntityCopyObserver strategy: disallow
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:06:01 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.Role]: private accessor [role]
2025-03-21 17:06:01 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:06:01 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:06:01 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.User]: private accessor [age]
2025-03-21 17:06:01 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 - Skipping collection inserts - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Skipping collection row deletions - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Skipping collection removals - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - Starting post-init callbacks
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet)#finishInitialization
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet) - key descriptor
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.Role) `staticFetchableList` generator
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.User.roleSet#{element}]) - element descriptor
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet)#finishInitialization
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet) - key descriptor
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.User) `staticFetchableList` generator
2025-03-21 17:06:01 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:06:01 - Created new SQL alias : r1_0
2025-03-21 17:06:01 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:06:01 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role.role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:06:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:06:01 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:06:01 -  Version select: select id from roles where id=?
2025-03-21 17:06:01 -  Insert (0): insert into roles (role) values (?)
2025-03-21 17:06:01 -  Update (0): update roles set role=? where id=?
2025-03-21 17:06:01 -  Delete (0): delete from roles where id=?
2025-03-21 17:06:01 - Created new SQL alias : u1_0
2025-03-21 17:06:01 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:06:01 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:06:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:06:01 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:06:01 -  Version select: select id from users where id=?
2025-03-21 17:06:01 -  Insert (0): insert into users (age,email,username,usernickname,password) values (?,?,?,?,?)
2025-03-21 17:06:01 -  Update (0): update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:06:01 -  Delete (0): delete from users where id=?
2025-03-21 17:06:01 - Created new SQL alias : rs1_0
2025-03-21 17:06:01 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.User.roleSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet] 
2025-03-21 17:06:01 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60688a97] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] 
2025-03-21 17:06:01 - Created new SQL alias : rs1_1
2025-03-21 17:06:01 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:06:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet) {
          primaryTableReference : user_roles as rs1_0
          TableGroupJoins {
             join LazyTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet.{element}) {
              primaryTableReference : roles as rs1_1
            }
          }
        }
      }
    }

2025-03-21 17:06:01 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:06:01 -  Row insert: insert into user_roles (user_id,role_id) values (?,?)
2025-03-21 17:06:01 -  Row delete: delete from user_roles where user_id=? and role_id=?
2025-03-21 17:06:01 -  One-shot delete: delete from user_roles where user_id=?
2025-03-21 17:06:01 - Created new SQL alias : us1_0
2025-03-21 17:06:01 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.Role.userSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet] 
2025-03-21 17:06:01 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6520625f] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] 
2025-03-21 17:06:01 - Created new SQL alias : us1_1
2025-03-21 17:06:01 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:06:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet) {
          primaryTableReference : user_roles as us1_0
          TableGroupJoins {
             join LazyTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet.{element}) {
              primaryTableReference : users as us1_1
            }
          }
        }
      }
    }

2025-03-21 17:06:01 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:06:01 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-21 17:06:01 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dacf18d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@382608d0]
2025-03-21 17:06:01 - Checking 0 named HQL queries
2025-03-21 17:06:01 - Checking 0 named SQL queries
2025-03-21 17:06:01 - No alter strings for table : roles
2025-03-21 17:06:01 - No alter strings for table : user_roles
2025-03-21 17:06:01 - No alter strings for table : users
2025-03-21 17:06:01 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@46146832
2025-03-21 17:06:01 - Registering SessionFactory: 3524b2fc-fc57-4835-b78c-c5117b16a7eb (<unnamed>)
2025-03-21 17:06:01 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-03-21 17:06:01 - Instantiated SessionFactory
2025-03-21 17:06:01 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 17:06:02 - Statistics initialized [enabled=false]
2025-03-21 17:06:02 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:06:02 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:06:02 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-21 17:06:02 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-03-21 17:06:02 - Adding welcome page template: index
2025-03-21 17:06:02 - 
	r.k.s.b.d.c.AdminController:
	{PATCH [/admin/user]}: update(User,BindingResult,int,List,Model)
	{POST [/admin]}: add(User,BindingResult,List,Model)
	{DELETE [/admin/user]}: delete(int)
	{GET [/admin/ref]}: ref(int,Model)
	{GET [/admin]}: showUsers(Model)
2025-03-21 17:06:02 - 
	r.k.s.b.d.c.NoAuthenticatedController:
	{GET [/index]}: goAdmin()
	{GET [/]}: goIndex(Model)
2025-03-21 17:06:02 - 
	r.k.s.b.d.c.UserController:
	{GET [/user]}: goUser(Model)
2025-03-21 17:06:02 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 17:06:02 - 10 mappings in 'requestMappingHandlerMapping'
2025-03-21 17:06:02 - 'viewControllerHandlerMapping' {/user=ParameterizableViewController [view="user"]}
2025-03-21 17:06:02 - 'beanNameHandlerMapping' {}
2025-03-21 17:06:02 - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-03-21 17:06:02 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-21 17:06:02 - Loaded expression factory via original TCCL
2025-03-21 17:06:02 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-03-21 17:06:02 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-03-21 17:06:02 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:06:02 - Trying to load META-INF/validation.xml via user class loader
2025-03-21 17:06:02 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:06:02 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:06:02 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:06:02 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:06:02 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:06:02 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:06:02 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:06:02 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:06:02 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:06:02 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:06:02 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:06:02 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 17:06:02 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 17:06:02 - Starting ProtocolHandler ["http-nio-8080"]
2025-03-21 17:06:02 - Tomcat started on port 8080 (http) with context path '/'
2025-03-21 17:06:02 - Started SpringBootSecurityDemoApplication in 4.703 seconds (process running for 5.793)
2025-03-21 17:06:10 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 17:06:10 - Initializing Servlet 'dispatcherServlet'
2025-03-21 17:06:10 - Detected StandardServletMultipartResolver
2025-03-21 17:06:10 - Detected AcceptHeaderLocaleResolver
2025-03-21 17:06:10 - Detected FixedThemeResolver
2025-03-21 17:06:10 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2eea0775
2025-03-21 17:06:10 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d43c89f
2025-03-21 17:06:10 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 17:06:10 - Completed initialization in 1 ms
2025-03-21 17:06:10 - Securing GET /admin
2025-03-21 17:06:10 - Set SecurityContextHolder to anonymous SecurityContext
2025-03-21 17:06:10 - Saved request http://localhost:8080/admin?continue to session
2025-03-21 17:06:10 - Redirecting to http://localhost:8080/login
2025-03-21 17:06:10 - Securing GET /login
2025-03-21 17:06:11 - Securing GET /default-ui.css
2025-03-21 17:06:23 - Securing POST /login
2025-03-21 17:06:23 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:06:23 - begin
2025-03-21 17:06:23 - Created new SQL alias : u1_0
2025-03-21 17:06:23 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:06:23 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b1bf419
2025-03-21 17:06:23 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-21 17:06:23 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-21 17:06:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:06:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:23 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-21 17:06:23 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@1072605679 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@904252568 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:06:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:23 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:23 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User.roleSet -> SetInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet)@1808758771 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element} -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element})@1649502105 (EntityCollectionPart(ru.kata.spring.boot_security.demo.models.User.roleSet#{element})@813857934)
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet)@165819465 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:06:23 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:06:23 - committing
2025-03-21 17:06:23 - Processing flush-time cascades
2025-03-21 17:06:23 - Dirty checking collections
2025-03-21 17:06:23 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#5] (initialized)
2025-03-21 17:06:23 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-21 17:06:23 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-21 17:06:23 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-21 17:06:23 - Listing entities:
2025-03-21 17:06:23 - ru.kata.spring.boot_security.demo.models.User{password=$2a$12$KDR6Q9f.lAGpk9ju.xtKy.cxc04ZFO33kcna7r.SwWmnw4ol2du5K, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro1@kata.com}
2025-03-21 17:06:23 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-21 17:06:24 - Authenticated user
2025-03-21 17:06:24 - Changed session id from 7939BBC100C93A3FF5531B565D3D3899
2025-03-21 17:06:24 - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@33307576]
2025-03-21 17:06:24 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]
2025-03-21 17:06:24 - Securing GET /admin
2025-03-21 17:06:24 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]]
2025-03-21 17:06:24 - Secured GET /admin
2025-03-21 17:06:24 - GET "/admin", parameters={}
2025-03-21 17:06:24 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:06:24 - HQL : from User WHERE id= :id
2025-03-21 17:06:24 - Encountered use of reserved word as identifier : =
2025-03-21 17:06:24 - Encountered use of reserved word as identifier : <EOF>
2025-03-21 17:06:24 - Unable to resolve unqualified attribute [id] in local from-clause
2025-03-21 17:06:24 - Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id)
2025-03-21 17:06:24 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `ru.kata.spring.boot_security.demo.models.User(5).id`
              :id
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-03-21 17:06:24 - Created new SQL alias : u1_0
2025-03-21 17:06:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(5))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:06:24 - Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2025-03-21 17:06:24 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id) 
2025-03-21 17:06:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(5)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(5).roleSet]

2025-03-21 17:06:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(5)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:24 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:06:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(5) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(5))@74614476 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(5).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(5).roleSet)@869452125 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:06:24 - HQL : FROM User
2025-03-21 17:06:24 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-03-21 17:06:24 - Created new SQL alias : u1_0
2025-03-21 17:06:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(6))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:06:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(6)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(6).roleSet]

2025-03-21 17:06:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(6)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:24 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:06:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(6) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(6))@1197179927 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(6).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(6).roleSet)@1970986296 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:06:24 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:06:24 - begin
2025-03-21 17:06:24 - Created new SQL alias : r1_0
2025-03-21 17:06:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(7))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:06:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(7)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(7).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(7).userSet]

2025-03-21 17:06:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(7)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:24 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:06:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(7) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(7))@906173941 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(7).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(7).userSet)@1757735492 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:06:24 - committing
2025-03-21 17:06:24 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:06:24 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-03-21 17:06:24 - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.3.RELEASE (built 2024-12-08T21:30:43+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect: SpringStandard (org.thymeleaf.spring6.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring6.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring6.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring6.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring6.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring6.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring6.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring6.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring6.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring6.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring6.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@876639d
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2cc2631
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring6.expression.SpringStandardConversionService@7cf3aea
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-03-21 17:06:24 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:06:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:06:24 - Completed 200 OK
2025-03-21 17:06:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:06:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:06:37 - Securing POST /admin/user
2025-03-21 17:06:37 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]]
2025-03-21 17:06:37 - Secured POST /admin/user
2025-03-21 17:06:37 - PATCH "/admin/user", parameters={masked}
2025-03-21 17:06:37 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#update(User, BindingResult, int, List, Model)
2025-03-21 17:06:37 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:06:37 - begin
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id=?
2025-03-21 17:06:37 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role)@2101119288 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role.userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role.userSet)@1554433877 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:06:37 - committing
2025-03-21 17:06:37 - Updating user with ID: 26
2025-03-21 17:06:37 - User data: Garry Ford
2025-03-21 17:06:37 - Roles: null
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:37 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:06:37 - Roles are null or empty for user with ID: 26
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:37 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:06:37 - begin
2025-03-21 17:06:37 - committing
2025-03-21 17:06:37 - Processing flush-time cascades
2025-03-21 17:06:37 - Dirty checking collections
2025-03-21 17:06:37 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#1], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#1] (uninitialized)
2025-03-21 17:06:37 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#26], was: [<unreferenced>] (initialized)
2025-03-21 17:06:37 - Collection dereferenced: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:06:37 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2025-03-21 17:06:37 - Flushed: 1 (re)creations, 0 updates, 1 removals to 3 collections
2025-03-21 17:06:37 - Listing entities:
2025-03-21 17:06:37 - ru.kata.spring.boot_security.demo.models.Role{role=USER, id=1, userSet=<uninitialized>}
2025-03-21 17:06:37 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$So4n1C8MLKf2w8sd0DLXjuj8nio3lEz8H783WW9CmZlFA9D7rpD1S, name=Garry, nickname=Ford, id=26, roleSet=[], age=22, email=garry@kata.com}
2025-03-21 17:06:37 - update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:06:37 - Deleting collection - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:06:37 - delete from user_roles where user_id=?
2025-03-21 17:06:37 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:06:37 - No collection rows to insert - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:06:37 - View name [redirect:], model {}
2025-03-21 17:06:37 - Completed 302 FOUND
2025-03-21 17:06:37 - Securing GET /admin
2025-03-21 17:06:37 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]]
2025-03-21 17:06:37 - Secured GET /admin
2025-03-21 17:06:37 - GET "/admin", parameters={}
2025-03-21 17:06:37 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:37 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:37 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:06:37 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:06:37 - begin
2025-03-21 17:06:37 - Created new SQL alias : r1_0
2025-03-21 17:06:37 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(8))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:06:37 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(8)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(8).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(8).userSet]

2025-03-21 17:06:37 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(8)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:06:37 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:06:37 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(8) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(8))@900834258 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(8).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(8).userSet)@905855216 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:06:37 - committing
2025-03-21 17:06:37 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:37 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:37 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:37 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:37 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:06:37 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:06:37 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:06:37 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:06:37 - Completed 200 OK
2025-03-21 17:07:00 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:07:00 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:07:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:07:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:08:00 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:08:00 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:08:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:08:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:09:00 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:09:00 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:09:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:09:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:09:55 - Securing POST /admin/user
2025-03-21 17:09:55 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]]
2025-03-21 17:09:55 - Secured POST /admin/user
2025-03-21 17:09:55 - PATCH "/admin/user", parameters={masked}
2025-03-21 17:09:55 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#update(User, BindingResult, int, List, Model)
2025-03-21 17:09:55 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:09:55 - begin
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id=?
2025-03-21 17:09:55 - committing
2025-03-21 17:09:55 - Updating user with ID: 26
2025-03-21 17:09:55 - User data: Garry Ford
2025-03-21 17:09:55 - Roles: null
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:09:55 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:09:55 - Roles are null or empty for user with ID: 26
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:09:55 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:09:55 - begin
2025-03-21 17:09:55 - committing
2025-03-21 17:09:55 - Processing flush-time cascades
2025-03-21 17:09:55 - Dirty checking collections
2025-03-21 17:09:55 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#1], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#1] (uninitialized)
2025-03-21 17:09:55 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#26], was: [<unreferenced>] (initialized)
2025-03-21 17:09:55 - Collection dereferenced: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:09:55 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2025-03-21 17:09:55 - Flushed: 1 (re)creations, 0 updates, 1 removals to 3 collections
2025-03-21 17:09:55 - Listing entities:
2025-03-21 17:09:55 - ru.kata.spring.boot_security.demo.models.Role{role=USER, id=1, userSet=<uninitialized>}
2025-03-21 17:09:55 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$7k10pqr1c/psTm0kAR/CfuYX3tA9n5Tl58FSKi828EemFc17tkp7a, name=Garry, nickname=Ford, id=26, roleSet=[], age=22, email=garry@kata.com}
2025-03-21 17:09:55 - update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:09:55 - Deleting collection - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:09:55 - delete from user_roles where user_id=?
2025-03-21 17:09:55 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:09:55 - No collection rows to insert - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:09:55 - View name [redirect:], model {}
2025-03-21 17:09:55 - Completed 302 FOUND
2025-03-21 17:09:55 - Securing GET /admin
2025-03-21 17:09:55 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@25e5d1e4, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=7939BBC100C93A3FF5531B565D3D3899], Granted Authorities=[ADMIN]]]
2025-03-21 17:09:55 - Secured GET /admin
2025-03-21 17:09:55 - GET "/admin", parameters={}
2025-03-21 17:09:55 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:09:55 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:09:55 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:09:55 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:09:55 - begin
2025-03-21 17:09:55 - Created new SQL alias : r1_0
2025-03-21 17:09:55 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(9))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:09:55 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(9)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(9).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(9).userSet]

2025-03-21 17:09:55 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(9)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:09:55 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:09:55 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(9) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(9))@4158359 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(9).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(9).userSet)@1417981501 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:09:55 - committing
2025-03-21 17:09:55 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:09:55 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:09:55 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:09:55 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:09:55 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:09:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:09:55 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:09:55 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:09:55 - Completed 200 OK
2025-03-21 17:10:00 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:10:00 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:10:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:10:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:11:00 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:11:00 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:11:30 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:11:30 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:12:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:12:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:12:31 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:12:31 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:13:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:13:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:13:31 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:13:31 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:14:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:14:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:14:31 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:14:31 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:15:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:15:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:15:31 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:15:31 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:16:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:16:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:16:31 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:16:31 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:17:01 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:17:01 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:17:27 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-21 17:17:27 - Graceful shutdown complete
2025-03-21 17:17:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 17:17:27 - HHH000031: Closing
2025-03-21 17:17:27 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2811943e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@382608d0]
2025-03-21 17:17:27 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-03-21 17:17:27 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-03-21 17:17:27 - HikariPool-1 - Shutdown initiated...
2025-03-21 17:17:27 - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@44ddb518: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2860d11c: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@695ddb27: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58fe10a5: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9722468: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@11934c83: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@d3c59a3: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3ff844dd: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6e5d800f: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@e5c936: (connection evicted)
2025-03-21 17:17:27 - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-03-21 17:17:27 - HikariPool-1 - Shutdown completed.
2025-03-21 17:52:49 - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-03-21 17:52:49 - HV000001: Hibernate Validator 8.0.2.Final
2025-03-21 17:52:50 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:52:50 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:52:50 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:52:50 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:52:50 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:52:50 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:52:50 - Loaded expression factory via original TCCL
2025-03-21 17:52:50 - Starting SpringBootSecurityDemoApplication using Java 23.0.2 with PID 324360 (C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes started by Alexey in C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap)
2025-03-21 17:52:50 - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-21 17:52:50 - No active profile set, falling back to 1 default profile: "default"
2025-03-21 17:52:50 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:52:50 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:52:50 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:52:50 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:52:50 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:52:50 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:52:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-21 17:52:50 - Finished Spring Data repository scanning in 48 ms. Found 2 JPA repository interfaces.
2025-03-21 17:52:51 - Tomcat initialized with port 8080 (http)
2025-03-21 17:52:51 - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-21 17:52:51 - Starting service [Tomcat]
2025-03-21 17:52:51 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-21 17:52:51 - Initializing Spring embedded WebApplicationContext
2025-03-21 17:52:51 - Root WebApplicationContext: initialization completed in 1274 ms
2025-03-21 17:52:51 - Filter 'hiddenHttpMethodFilter' configured for use
2025-03-21 17:52:51 - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
2025-03-21 17:52:51 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b5%d0%b9/Java_study/Kata_PP_3_1_3_BS_Bootstrap/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.kata.spring.boot_security.demo.models.Role
		ru.kata.spring.boot_security.demo.models.User]
	Mapping files names []
	Properties []
2025-03-21 17:52:51 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-03-21 17:52:51 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-03-21 17:52:51 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-21 17:52:51 - HHH000206: 'hibernate.properties' not found
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:52:51 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-03-21 17:52:51 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-03-21 17:52:51 - HHH000026: Second-level cache disabled
2025-03-21 17:52:51 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ef4cbe1
2025-03-21 17:52:51 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6ef4cbe1
2025-03-21 17:52:51 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6ef4cbe1
2025-03-21 17:52:51 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@207dd1b7
2025-03-21 17:52:51 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@207dd1b7
2025-03-21 17:52:51 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2baac4a7
2025-03-21 17:52:51 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2baac4a7
2025-03-21 17:52:51 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23ad2d17
2025-03-21 17:52:51 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23ad2d17
2025-03-21 17:52:51 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bce4140
2025-03-21 17:52:51 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6bce4140
2025-03-21 17:52:51 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6bce4140
2025-03-21 17:52:51 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@25f0c5e7
2025-03-21 17:52:51 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@25f0c5e7
2025-03-21 17:52:51 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@25f0c5e7
2025-03-21 17:52:51 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5882b202
2025-03-21 17:52:51 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5882b202
2025-03-21 17:52:51 - Adding type registration image -> org.hibernate.type.BasicTypeReference@120df990
2025-03-21 17:52:51 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@b506ed0
2025-03-21 17:52:51 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@b506ed0
2025-03-21 17:52:51 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@282c4da0
2025-03-21 17:52:51 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@65f3e805
2025-03-21 17:52:51 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:52:51 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:52:51 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:52:51 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@10618775
2025-03-21 17:52:51 - Adding type registration int -> org.hibernate.type.BasicTypeReference@10618775
2025-03-21 17:52:51 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@10618775
2025-03-21 17:52:51 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-21 17:52:51 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-21 17:52:51 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-21 17:52:51 - Adding type registration float -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-21 17:52:51 - Adding type registration float -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-21 17:52:51 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-21 17:52:51 - Adding type registration double -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:52:51 - Adding type registration double -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:52:51 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:52:51 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:52:51 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:52:51 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:52:51 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:52:51 - Adding type registration character -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:52:51 - Adding type registration char -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:52:51 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:52:51 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:52:51 - Adding type registration string -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:52:51 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:52:51 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73d62b5
2025-03-21 17:52:51 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:52:51 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:52:51 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:52:51 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:52:51 - Adding type registration text -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-21 17:52:51 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-21 17:52:51 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:52:51 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:52:51 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:52:51 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:52:51 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:52:51 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:52:51 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-21 17:52:51 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-21 17:52:51 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2b7facc7
2025-03-21 17:52:51 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:52:51 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@24197b13
2025-03-21 17:52:51 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@24197b13
2025-03-21 17:52:51 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-21 17:52:51 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-21 17:52:51 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2776fd8f
2025-03-21 17:52:51 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2776fd8f
2025-03-21 17:52:51 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:52:51 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:52:51 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-21 17:52:51 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-21 17:52:51 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49b89425
2025-03-21 17:52:51 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59328218
2025-03-21 17:52:51 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-21 17:52:51 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-21 17:52:51 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@478967eb
2025-03-21 17:52:51 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a1dda83
2025-03-21 17:52:51 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f2b39a
2025-03-21 17:52:51 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-21 17:52:51 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-21 17:52:51 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-21 17:52:51 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52621501
2025-03-21 17:52:51 - Adding type registration date -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-21 17:52:51 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-21 17:52:51 - Adding type registration time -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:52:51 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:52:51 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:52:51 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:52:51 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:52:51 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:52:51 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:52:51 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:52:51 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14457a95
2025-03-21 17:52:51 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@48567727
2025-03-21 17:52:51 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@10e9a5fe
2025-03-21 17:52:51 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@10e9a5fe
2025-03-21 17:52:51 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:52:51 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:52:51 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:52:51 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1abcd059
2025-03-21 17:52:51 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@61a87366
2025-03-21 17:52:51 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-21 17:52:51 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-21 17:52:51 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:52:51 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:52:51 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:52:51 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:52:51 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:52:51 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:52:51 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:52:51 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@70091872
2025-03-21 17:52:51 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@70091872
2025-03-21 17:52:51 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-21 17:52:51 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-21 17:52:51 - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:52:51 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:52:51 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:52:51 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-21 17:52:51 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@7c0df4ab
2025-03-21 17:52:51 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@2e362407
2025-03-21 17:52:51 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-21 17:52:51 - Adding type registration object -> org.hibernate.type.JavaObjectType@a316f6b
2025-03-21 17:52:51 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a316f6b
2025-03-21 17:52:51 - Adding type registration null -> org.hibernate.type.NullType@38087342
2025-03-21 17:52:51 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@681de87f
2025-03-21 17:52:51 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2eb1c615
2025-03-21 17:52:51 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2674d4f6
2025-03-21 17:52:51 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d9d2119
2025-03-21 17:52:51 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5a4464c5
2025-03-21 17:52:51 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7ae590f6
2025-03-21 17:52:51 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ab63838
2025-03-21 17:52:51 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4e974b9e
2025-03-21 17:52:51 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@633ddc0c] into BootstrapContext; was [null]
2025-03-21 17:52:51 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@633ddc0c) [was null]
2025-03-21 17:52:51 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3af236d0] into BootstrapContext; was [null]
2025-03-21 17:52:51 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23564dd2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@54895681]
2025-03-21 17:52:51 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-21 17:52:51 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@633ddc0c]
2025-03-21 17:52:51 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@633ddc0c]
2025-03-21 17:52:51 - HikariPool-1 - configuration:
2025-03-21 17:52:51 - allowPoolSuspension.............false
2025-03-21 17:52:51 - autoCommit......................true
2025-03-21 17:52:51 - catalog.........................none
2025-03-21 17:52:51 - connectionInitSql...............none
2025-03-21 17:52:51 - connectionTestQuery.............none
2025-03-21 17:52:51 - connectionTimeout...............30000
2025-03-21 17:52:51 - dataSource......................none
2025-03-21 17:52:51 - dataSourceClassName.............none
2025-03-21 17:52:51 - dataSourceJNDI..................none
2025-03-21 17:52:51 - dataSourceProperties............{password=<masked>}
2025-03-21 17:52:51 - driverClassName................."com.mysql.cj.jdbc.Driver"
2025-03-21 17:52:51 - exceptionOverrideClassName......none
2025-03-21 17:52:51 - healthCheckProperties...........{}
2025-03-21 17:52:51 - healthCheckRegistry.............none
2025-03-21 17:52:51 - idleTimeout.....................600000
2025-03-21 17:52:51 - initializationFailTimeout.......1
2025-03-21 17:52:51 - isolateInternalQueries..........false
2025-03-21 17:52:51 - jdbcUrl.........................jdbc:mysql://localhost:3306/mypp231db?allowPublicKeyRetrieval=TRUE&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
2025-03-21 17:52:51 - keepaliveTime...................0
2025-03-21 17:52:51 - leakDetectionThreshold..........0
2025-03-21 17:52:51 - maxLifetime.....................1800000
2025-03-21 17:52:51 - maximumPoolSize.................10
2025-03-21 17:52:51 - metricRegistry..................none
2025-03-21 17:52:51 - metricsTrackerFactory...........none
2025-03-21 17:52:51 - minimumIdle.....................10
2025-03-21 17:52:51 - password........................<masked>
2025-03-21 17:52:51 - poolName........................"HikariPool-1"
2025-03-21 17:52:51 - readOnly........................false
2025-03-21 17:52:51 - registerMbeans..................false
2025-03-21 17:52:51 - scheduledExecutor...............none
2025-03-21 17:52:51 - schema..........................none
2025-03-21 17:52:51 - threadFactory...................internal
2025-03-21 17:52:51 - transactionIsolation............default
2025-03-21 17:52:51 - username........................"root"
2025-03-21 17:52:51 - validationTimeout...............5000
2025-03-21 17:52:51 - HikariPool-1 - Starting...
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f581211
2025-03-21 17:52:52 - HikariPool-1 - Start completed.
2025-03-21 17:52:52 - Database ->
	   name : MySQL
	version : 8.0.38
	  major : 8
	  minor : 0
2025-03-21 17:52:52 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-03-21 17:52:52 - JDBC version : 4.2
2025-03-21 17:52:52 - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-21 17:52:52 - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.38
2025-03-21 17:52:52 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-03-21 17:52:52 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-03-21 17:52:52 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.38
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-21 17:52:52 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@436a563f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@538e74fc)
2025-03-21 17:52:52 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ecb9e17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6475e778)
2025-03-21 17:52:52 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75bf9e67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55b62db8)
2025-03-21 17:52:52 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@772f3a3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3caa4d85)
2025-03-21 17:52:52 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@356fa0d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51508029)
2025-03-21 17:52:52 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f20b6fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31880efa)
2025-03-21 17:52:52 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79295932) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2cadcff6)
2025-03-21 17:52:52 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76e00bdb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ee2423)
2025-03-21 17:52:52 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@343d1d25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@762da62b)
2025-03-21 17:52:52 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-03-21 17:52:52 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-03-21 17:52:52 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-03-21 17:52:52 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-03-21 17:52:52 - Adding type registration null -> org.hibernate.type.NullType@c190cfc
2025-03-21 17:52:52 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38087342`
2025-03-21 17:52:52 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-03-21 17:52:52 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:52:52 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:52:52 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:52:52 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:52:52 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:52:52 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:52:52 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:52:52 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:52:52 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:52:52 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:52:52 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:52:52 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cdd31a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7dddfc35]
2025-03-21 17:52:52 - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21bfe990
2025-03-21 17:52:52 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-03-21 17:52:52 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6082e3ab
2025-03-21 17:52:52 - Import with entity name Role
2025-03-21 17:52:52 - Bind entity ru.kata.spring.boot_security.demo.models.Role on table roles
2025-03-21 17:52:52 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5128e6d7
2025-03-21 17:52:52 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:id]
2025-03-21 17:52:52 - building BasicValue for id
2025-03-21 17:52:52 - Skipping column re-registration: roles.id
2025-03-21 17:52:52 - Building property id
2025-03-21 17:52:52 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='role')
2025-03-21 17:52:52 - MetadataSourceProcessor property role with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:role]
2025-03-21 17:52:52 - building BasicValue for role
2025-03-21 17:52:52 - Skipping column re-registration: roles.role
2025-03-21 17:52:52 - Building property role
2025-03-21 17:52:52 - Binding column: IndexColumn(column='userSet_ORDER')
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='userSet_KEY')
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn(column='userSet_KEY')
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ad1ce4
2025-03-21 17:52:52 - Collection role: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Building property userSet
2025-03-21 17:52:52 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:52:52 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:52:52 - Import with entity name User
2025-03-21 17:52:52 - Bind entity ru.kata.spring.boot_security.demo.models.User on table users
2025-03-21 17:52:52 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:52:52 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:id]
2025-03-21 17:52:52 - building BasicValue for id
2025-03-21 17:52:52 - Skipping column re-registration: users.id
2025-03-21 17:52:52 - Building property id
2025-03-21 17:52:52 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='age')
2025-03-21 17:52:52 - MetadataSourceProcessor property age with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:age]
2025-03-21 17:52:52 - building BasicValue for age
2025-03-21 17:52:52 - Skipping column re-registration: users.age
2025-03-21 17:52:52 - Building property age
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - MetadataSourceProcessor property email with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:email]
2025-03-21 17:52:52 - building BasicValue for email
2025-03-21 17:52:52 - Skipping column re-registration: users.email
2025-03-21 17:52:52 - Building property email
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='username')
2025-03-21 17:52:52 - MetadataSourceProcessor property name with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:name]
2025-03-21 17:52:52 - building BasicValue for name
2025-03-21 17:52:52 - Skipping column re-registration: users.username
2025-03-21 17:52:52 - Building property name
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='usernickname')
2025-03-21 17:52:52 - MetadataSourceProcessor property nickname with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:nickname]
2025-03-21 17:52:52 - building BasicValue for nickname
2025-03-21 17:52:52 - Skipping column re-registration: users.usernickname
2025-03-21 17:52:52 - Building property nickname
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - MetadataSourceProcessor property password with lazy=false
2025-03-21 17:52:52 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:password]
2025-03-21 17:52:52 - building BasicValue for password
2025-03-21 17:52:52 - Skipping column re-registration: users.password
2025-03-21 17:52:52 - Building property password
2025-03-21 17:52:52 - Binding column: IndexColumn(column='roleSet_ORDER')
2025-03-21 17:52:52 - Binding column: AnnotatedColumn()
2025-03-21 17:52:52 - Binding column: AnnotatedColumn(column='roleSet_KEY')
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn(column='roleSet_KEY')
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-03-21 17:52:52 - Binding column: AnnotatedJoinColumn(column='role_id')
2025-03-21 17:52:52 - Collection role: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:52 - Building property roleSet
2025-03-21 17:52:52 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for role
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for age
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for nickname
2025-03-21 17:52:52 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-03-21 17:52:52 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
2025-03-21 17:52:52 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-03-21 17:52:52 - Second pass for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:52 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:52 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:52:52 - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:52:52 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:52:52 - Mapped collection key: user_id, element: role_id
2025-03-21 17:52:52 - Second pass for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:52:52 - Retrieving property ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:52 - Mapped collection key: role_id, element: user_id
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32eabeb7
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e360e0
2025-03-21 17:52:52 - Building session factory
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-03-21 17:52:52 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:52:52 - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@ef85567, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.4.2\spring-boot-starter-thymeleaf-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.2\spring-boot-starter-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.2\spring-boot-autoconfigure-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.2\spring-boot-starter-logging-3.4.2.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\Алексей\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Алексей\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.3.RELEASE\thymeleaf-spring6-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf\3.1.3.RELEASE\thymeleaf-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.2\spring-boot-starter-web-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.2\spring-boot-starter-json-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.2\spring-boot-starter-tomcat-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-web\6.2.2\spring-web-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-beans\6.2.2\spring-beans-6.2.2.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-observation\1.14.3\micrometer-observation-1.14.3.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-commons\1.14.3\micrometer-commons-1.14.3.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-webmvc\6.2.2\spring-webmvc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-context\6.2.2\spring-context-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-expression\6.2.2\spring-expression-6.2.2.jar;C:\Users\Алексей\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Алексей\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Алексей\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-core\6.2.2\spring-core-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jcl\6.2.2\spring-jcl-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.2\spring-boot-starter-security-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aop\6.2.2\spring-aop-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.2\spring-boot-starter-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\hibernate\orm\hibernate-core\6.6.5.Final\hibernate-core-6.6.5.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Алексей\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Алексей\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Алексей\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Алексей\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Алексей\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-jpa\3.4.2\spring-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-commons\3.4.2\spring-data-commons-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-orm\6.2.2\spring-orm-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-tx\6.2.2\spring-tx-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aspects\6.2.2\spring-aspects-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.2\spring-boot-starter-jdbc-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jdbc\6.2.2\spring-jdbc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.2\spring-boot-starter-validation-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Алексей\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Baku, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 11, APPLICATION_NAME=Kata_3_1_2_S_Boot, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin, sun.java.command=ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1c2fb9e8, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\Алексей, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\Алексей\.jdks\openjdk-23.0.2, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=Alexey, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\CD86~1\AppData\Local\Temp\, catalina.home=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.13597249622240219639, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=324360, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.13597249622240219639, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ec3944, native.encoding=Cp1251, java.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\app\18c\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\app\apache-maven-3.9.8\bin;C:\Users\Алексей\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.4\bin;;C:\Microsoft VS Code\bin;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7-58, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=67.0, LOGGED_APPLICATION_NAME=[Kata_3_1_2_S_Boot] }
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@509fa279
2025-03-21 17:52:52 - Session factory constructed with filter configurations : {}
2025-03-21 17:52:52 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:52:52 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:52:52 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:52:52 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:52:52 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:52:52 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:52:52 - Loaded expression factory via original TCCL
2025-03-21 17:52:52 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:52:52 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:52:52 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:52:52 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:52:52 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:52:52 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b9caddd
2025-03-21 17:52:52 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5f911d24] under count; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7c5d36c3] under every; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@31de27c] under any; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64f33dee] under sinh; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61c58320] under cosh; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10e4ee33] under tanh; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e90cec8] under pi; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13f182b9] under log; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : length -> character_length
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2d3d4a54] under position; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@19ce19b7] under overlay; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@43b45ce4] under trim; prior registration was null
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3601549f] under cast; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b2c7186] under collate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@bea283b] under extract; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5ddf5118] under ifnull; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5f35370b] under pad; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@512dc0e0] under str; prior registration was null
2025-03-21 17:52:52 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c39d9b7
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6c8ad6d7] under format; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@75c15f76] under timestampadd; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@323eecf8] under timestampdiff; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : dateadd -> timestampadd
2025-03-21 17:52:52 - Registering alternate key : datediff -> timestampdiff
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20b67366] under current_date; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@186d6033] under current_time; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c0ece6d] under current_timestamp; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : current date -> current_date
2025-03-21 17:52:52 - Registering alternate key : current time -> current_time
2025-03-21 17:52:52 - Registering alternate key : current timestamp -> current_timestamp
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69419d59] under local_date; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7affee54] under local_time; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@96075c0] under local_datetime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2337bf27] under offset_datetime; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : local date -> local_date
2025-03-21 17:52:52 - Registering alternate key : local time -> local_time
2025-03-21 17:52:52 - Registering alternate key : local datetime -> local_datetime
2025-03-21 17:52:52 - Registering alternate key : offset datetime -> offset_datetime
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4679554d] under instant; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : current_instant -> instant
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5bba9949] under sql; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13f182b9
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7474196] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@11ee671f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : day -> dayofmonth
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18209303] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2d3d4a54
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@dd07be8] under trunc; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : truncate -> trunc
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b8fcdf2] under bitand; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54d2f5d3] under bitor; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c29b0dc] under bitxor; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@228958a] under bitnot; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7cd3860] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6c8ad6d7
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7affee54
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@96075c0
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44f23927] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e90cec8
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59cde35] under chr; prior registration was null
2025-03-21 17:52:52 - Registering alternate key : char -> chr
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43de9fc9] under sysdate; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3c68e82] under rank; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1e66bf2d] under dense_rank; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7112fa5] under percent_rank; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@342dc040] under cume_dist; prior registration was null
2025-03-21 17:52:52 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7c8b37a8] under listagg; prior registration was null
2025-03-21 17:52:52 - abs(NUMERIC arg)
2025-03-21 17:52:52 - Double acos(NUMERIC arg)
2025-03-21 17:52:52 - adddate(DATE datetime, INTEGER days)
2025-03-21 17:52:52 - addtime(TIME datetime, TIME time)
2025-03-21 17:52:52 - Boolean any(BOOLEAN arg)
2025-03-21 17:52:52 - Integer ascii(STRING arg)
2025-03-21 17:52:52 - Double asin(NUMERIC arg)
2025-03-21 17:52:52 - Double atan(NUMERIC arg)
2025-03-21 17:52:52 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:52:52 - avg(arg)
2025-03-21 17:52:52 - bit_and(arg)
2025-03-21 17:52:52 - Integer bit_length(STRING_OR_CLOB arg)
2025-03-21 17:52:52 - bit_or(arg)
2025-03-21 17:52:52 - bitand(arg0, arg1)
2025-03-21 17:52:52 - bitnot(arg)
2025-03-21 17:52:52 - bitor(arg0, arg1)
2025-03-21 17:52:52 - bitxor(arg0, arg1)
2025-03-21 17:52:52 - cast(arg as Type)
2025-03-21 17:52:52 - ceiling(NUMERIC arg)
2025-03-21 17:52:52 - Character char(INTEGER arg)
2025-03-21 17:52:52 - Integer character_length(STRING_OR_CLOB arg)
2025-03-21 17:52:52 - Character chr(INTEGER arg)
2025-03-21 17:52:52 - coalesce(arg0[, arg1[, ...]])
2025-03-21 17:52:52 - String collate(STRING string as COLLATION collation)
2025-03-21 17:52:52 - String concat(STRING string0[, STRING string1[, ...]])
2025-03-21 17:52:52 - Double cos(NUMERIC arg)
2025-03-21 17:52:52 - Double cosh(NUMERIC arg)
2025-03-21 17:52:52 - Double cot(NUMERIC arg)
2025-03-21 17:52:52 - Long count([distinct ]{arg|*})
2025-03-21 17:52:52 - Integer crc32(arg)
2025-03-21 17:52:52 - Double cume_dist([arg0[, ...]])
2025-03-21 17:52:52 - Date curdate()
2025-03-21 17:52:52 - Date current date
2025-03-21 17:52:52 - Time current time
2025-03-21 17:52:52 - Timestamp current timestamp
2025-03-21 17:52:52 - Date current_date
2025-03-21 17:52:52 - Instant current_instant
2025-03-21 17:52:52 - Time current_time
2025-03-21 17:52:52 - Timestamp current_timestamp
2025-03-21 17:52:52 - Time curtime()
2025-03-21 17:52:52 - Date date(arg)
2025-03-21 17:52:52 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:52:52 - Integer datediff(DATE end, DATE start)
2025-03-21 17:52:52 - Integer day(DATE arg)
2025-03-21 17:52:52 - String dayname(DATE arg)
2025-03-21 17:52:52 - Integer dayofmonth(DATE arg)
2025-03-21 17:52:52 - Integer dayofweek(DATE arg)
2025-03-21 17:52:52 - Integer dayofyear(DATE arg)
2025-03-21 17:52:52 - Double degrees(NUMERIC arg)
2025-03-21 17:52:52 - Long dense_rank([arg0[, ...]])
2025-03-21 17:52:52 - Boolean every(BOOLEAN arg)
2025-03-21 17:52:52 - Double exp(NUMERIC arg)
2025-03-21 17:52:52 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-03-21 17:52:52 - first_valueANY value
2025-03-21 17:52:52 - floor(NUMERIC arg)
2025-03-21 17:52:52 - String format(TEMPORAL datetime as STRING pattern)
2025-03-21 17:52:52 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:52:52 - Integer hour(TIME arg)
2025-03-21 17:52:52 - ifnull(arg0, arg1)
2025-03-21 17:52:52 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-03-21 17:52:52 - Instant instant
2025-03-21 17:52:52 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-03-21 17:52:52 - lagANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:52:52 - Date last_day(DATE arg)
2025-03-21 17:52:52 - last_valueANY value
2025-03-21 17:52:52 - leadANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:52:52 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:52:52 - String left(STRING string, INTEGER length)
2025-03-21 17:52:52 - Integer length(STRING_OR_CLOB arg)
2025-03-21 17:52:52 - String listagg(STRING arg0, STRING arg1)
2025-03-21 17:52:52 - Double ln(NUMERIC arg)
2025-03-21 17:52:52 - LocalDate local date
2025-03-21 17:52:52 - LocalDateTime local datetime
2025-03-21 17:52:52 - LocalTime local time
2025-03-21 17:52:52 - LocalDate local_date
2025-03-21 17:52:52 - LocalDateTime local_datetime
2025-03-21 17:52:52 - LocalTime local_time
2025-03-21 17:52:52 - Timestamp localtime
2025-03-21 17:52:52 - Timestamp localtimestamp
2025-03-21 17:52:52 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-03-21 17:52:52 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-03-21 17:52:52 - Double log10(NUMERIC arg)
2025-03-21 17:52:52 - Double log2(NUMERIC arg)
2025-03-21 17:52:52 - String lower(STRING string)
2025-03-21 17:52:52 - String lpad(string, length[, padding])
2025-03-21 17:52:52 - String ltrim(STRING string[, STRING characters])
2025-03-21 17:52:52 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-03-21 17:52:52 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-03-21 17:52:52 - max(COMPARABLE arg)
2025-03-21 17:52:52 - String md5(arg)
2025-03-21 17:52:52 - Integer microsecond(TIME arg)
2025-03-21 17:52:52 - min(COMPARABLE arg)
2025-03-21 17:52:52 - Integer minute(TIME arg)
2025-03-21 17:52:52 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-03-21 17:52:52 - Integer month(DATE arg)
2025-03-21 17:52:52 - String monthname(DATE arg)
2025-03-21 17:52:52 - Timestamp now()
2025-03-21 17:52:52 - nth_valueANY value, INTEGER nth
2025-03-21 17:52:52 - nullif(arg0, arg1)
2025-03-21 17:52:52 - Integer octet_length(STRING_OR_CLOB arg)
2025-03-21 17:52:52 - OffsetDateTime offset datetime
2025-03-21 17:52:52 - OffsetDateTime offset_datetime
2025-03-21 17:52:52 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-03-21 17:52:52 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-03-21 17:52:52 - Double percent_rank([arg0[, ...]])
2025-03-21 17:52:52 - Double pi
2025-03-21 17:52:52 - Integer position(STRING pattern in STRING string)
2025-03-21 17:52:52 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:52:52 - Integer quarter(DATE arg)
2025-03-21 17:52:52 - Double radians(NUMERIC arg)
2025-03-21 17:52:52 - Double rand([INTEGER seed])
2025-03-21 17:52:52 - Long rank([arg0[, ...]])
2025-03-21 17:52:52 - String repeat(STRING string, INTEGER times)
2025-03-21 17:52:52 - String replace(STRING string, STRING pattern, STRING replacement)
2025-03-21 17:52:52 - String reverse(STRING arg)
2025-03-21 17:52:52 - String right(STRING string, INTEGER length)
2025-03-21 17:52:52 - round(NUMERIC number[, INTEGER places])
2025-03-21 17:52:52 - Long row_number()
2025-03-21 17:52:52 - String rpad(string, length[, padding])
2025-03-21 17:52:52 - String rtrim(STRING string[, STRING characters])
2025-03-21 17:52:52 - Integer second(TIME arg)
2025-03-21 17:52:52 - String sha(arg)
2025-03-21 17:52:52 - String sha1(arg)
2025-03-21 17:52:52 - String sha2(arg0, arg1)
2025-03-21 17:52:52 - Integer sign(NUMERIC arg)
2025-03-21 17:52:52 - Double sin(NUMERIC arg)
2025-03-21 17:52:52 - Double sinh(NUMERIC arg)
2025-03-21 17:52:52 - String soundex(arg)
2025-03-21 17:52:52 - String space(INTEGER arg)
2025-03-21 17:52:52 - Object sql
2025-03-21 17:52:52 - Double sqrt(NUMERIC arg)
2025-03-21 17:52:52 - Double stddev(NUMERIC arg)
2025-03-21 17:52:52 - Double stddev_pop(NUMERIC arg)
2025-03-21 17:52:52 - Double stddev_samp(NUMERIC arg)
2025-03-21 17:52:52 - String str(arg)
2025-03-21 17:52:52 - subdate(DATE datetime, INTEGER days)
2025-03-21 17:52:52 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-03-21 17:52:52 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-03-21 17:52:52 - subtime(TIME datetime, TIME time)
2025-03-21 17:52:52 - sum(arg)
2025-03-21 17:52:52 - Timestamp sysdate()
2025-03-21 17:52:52 - Double tan(NUMERIC arg)
2025-03-21 17:52:52 - Double tanh(NUMERIC arg)
2025-03-21 17:52:52 - String time(arg)
2025-03-21 17:52:52 - Timestamp timestamp(arg0[, arg1])
2025-03-21 17:52:52 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:52:52 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-03-21 17:52:52 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-03-21 17:52:52 - trunc( ... )
2025-03-21 17:52:52 - truncate( ... )
2025-03-21 17:52:52 - String upper(STRING string)
2025-03-21 17:52:52 - Date utc_date
2025-03-21 17:52:52 - Time utc_time
2025-03-21 17:52:52 - Timestamp utc_timestamp
2025-03-21 17:52:52 - Double var_pop(NUMERIC arg)
2025-03-21 17:52:52 - Double var_samp(NUMERIC arg)
2025-03-21 17:52:52 - Double variance(NUMERIC arg)
2025-03-21 17:52:52 - Integer week(DATE arg)
2025-03-21 17:52:52 - Integer year(DATE arg)
2025-03-21 17:52:52 - Starting QueryInterpretationCache(2048)
2025-03-21 17:52:52 - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:52:52 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:52:52 - Configured EntityCopyObserver strategy: disallow
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:52:52 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.Role]: private accessor [role]
2025-03-21 17:52:52 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:52:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:52:52 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.User]: private accessor [age]
2025-03-21 17:52:52 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:52 - Skipping collection inserts - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Skipping collection row deletions - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Skipping collection removals - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:52 - Starting post-init callbacks
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet)#finishInitialization
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet) - key descriptor
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.Role) `staticFetchableList` generator
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.User.roleSet#{element}]) - element descriptor
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet)#finishInitialization
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet) - key descriptor
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.User) `staticFetchableList` generator
2025-03-21 17:52:52 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:52:52 - Created new SQL alias : r1_0
2025-03-21 17:52:52 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:52:53 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role.role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:52:53 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:52:53 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:52:53 -  Version select: select id from roles where id=?
2025-03-21 17:52:53 -  Insert (0): insert into roles (role) values (?)
2025-03-21 17:52:53 -  Update (0): update roles set role=? where id=?
2025-03-21 17:52:53 -  Delete (0): delete from roles where id=?
2025-03-21 17:52:53 - Created new SQL alias : u1_0
2025-03-21 17:52:53 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:52:53 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:52:53 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:52:53 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:52:53 -  Version select: select id from users where id=?
2025-03-21 17:52:53 -  Insert (0): insert into users (age,email,username,usernickname,password) values (?,?,?,?,?)
2025-03-21 17:52:53 -  Update (0): update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:52:53 -  Delete (0): delete from users where id=?
2025-03-21 17:52:53 - Created new SQL alias : rs1_0
2025-03-21 17:52:53 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.User.roleSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet] 
2025-03-21 17:52:53 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56d3af4d] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] 
2025-03-21 17:52:53 - Created new SQL alias : rs1_1
2025-03-21 17:52:53 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:52:53 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet) {
          primaryTableReference : user_roles as rs1_0
          TableGroupJoins {
             join LazyTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet.{element}) {
              primaryTableReference : roles as rs1_1
            }
          }
        }
      }
    }

2025-03-21 17:52:53 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:52:53 -  Row insert: insert into user_roles (user_id,role_id) values (?,?)
2025-03-21 17:52:53 -  Row delete: delete from user_roles where user_id=? and role_id=?
2025-03-21 17:52:53 -  One-shot delete: delete from user_roles where user_id=?
2025-03-21 17:52:53 - Created new SQL alias : us1_0
2025-03-21 17:52:53 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.Role.userSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet] 
2025-03-21 17:52:53 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@782e0844] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] 
2025-03-21 17:52:53 - Created new SQL alias : us1_1
2025-03-21 17:52:53 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:52:53 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet) {
          primaryTableReference : user_roles as us1_0
          TableGroupJoins {
             join LazyTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet.{element}) {
              primaryTableReference : users as us1_1
            }
          }
        }
      }
    }

2025-03-21 17:52:53 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:52:53 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-21 17:52:53 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cdd31a4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@24d73c51]
2025-03-21 17:52:53 - Checking 0 named HQL queries
2025-03-21 17:52:53 - Checking 0 named SQL queries
2025-03-21 17:52:53 - No alter strings for table : roles
2025-03-21 17:52:53 - No alter strings for table : user_roles
2025-03-21 17:52:53 - No alter strings for table : users
2025-03-21 17:52:53 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bec6682
2025-03-21 17:52:53 - Registering SessionFactory: 01a7b3b6-070f-4ee8-b991-298f3e9f9e0a (<unnamed>)
2025-03-21 17:52:53 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-03-21 17:52:53 - Instantiated SessionFactory
2025-03-21 17:52:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 17:52:53 - Statistics initialized [enabled=false]
2025-03-21 17:52:53 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:52:53 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:52:53 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-21 17:52:53 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-03-21 17:52:53 - Adding welcome page template: index
2025-03-21 17:52:53 - 
	r.k.s.b.d.c.AdminController:
	{PATCH [/admin/user]}: update(User,BindingResult,int,List,Model)
	{POST [/admin]}: add(User,BindingResult,List,Model)
	{DELETE [/admin/user]}: delete(int)
	{GET [/admin/ref]}: ref(int,Model)
	{GET [/admin]}: showUsers(Model)
2025-03-21 17:52:53 - 
	r.k.s.b.d.c.NoAuthenticatedController:
	{GET [/]}: goIndex(Model)
	{GET [/index]}: goAdmin()
2025-03-21 17:52:53 - 
	r.k.s.b.d.c.UserController:
	{GET [/user]}: goUser(Model)
2025-03-21 17:52:53 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 17:52:53 - 10 mappings in 'requestMappingHandlerMapping'
2025-03-21 17:52:53 - 'viewControllerHandlerMapping' {/user=ParameterizableViewController [view="user"]}
2025-03-21 17:52:53 - 'beanNameHandlerMapping' {}
2025-03-21 17:52:53 - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-03-21 17:52:53 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-21 17:52:53 - Loaded expression factory via original TCCL
2025-03-21 17:52:53 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-03-21 17:52:53 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-03-21 17:52:53 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:52:53 - Trying to load META-INF/validation.xml via user class loader
2025-03-21 17:52:53 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:52:53 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:52:53 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:52:53 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:52:53 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:52:53 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:52:53 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:52:53 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:52:53 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:52:53 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:52:53 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:52:53 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 17:52:53 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 17:52:54 - Starting ProtocolHandler ["http-nio-8080"]
2025-03-21 17:52:54 - Tomcat started on port 8080 (http) with context path '/'
2025-03-21 17:52:54 - Started SpringBootSecurityDemoApplication in 4.362 seconds (process running for 5.29)
2025-03-21 17:52:54 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 17:52:54 - Initializing Servlet 'dispatcherServlet'
2025-03-21 17:52:54 - Detected StandardServletMultipartResolver
2025-03-21 17:52:54 - Detected AcceptHeaderLocaleResolver
2025-03-21 17:52:54 - Detected FixedThemeResolver
2025-03-21 17:52:54 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@655d5285
2025-03-21 17:52:54 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@506d7fed
2025-03-21 17:52:54 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 17:52:54 - Completed initialization in 1 ms
2025-03-21 17:52:54 - Securing GET /admin
2025-03-21 17:52:54 - Set SecurityContextHolder to anonymous SecurityContext
2025-03-21 17:52:54 - Saved request http://localhost:8080/admin?continue to session
2025-03-21 17:52:54 - Redirecting to http://localhost:8080/login
2025-03-21 17:52:54 - Securing GET /login
2025-03-21 17:52:54 - Securing GET /default-ui.css
2025-03-21 17:53:00 - Securing POST /login
2025-03-21 17:53:00 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:00 - begin
2025-03-21 17:53:00 - Created new SQL alias : u1_0
2025-03-21 17:53:00 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:53:00 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28b1efcf
2025-03-21 17:53:00 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-21 17:53:00 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-21 17:53:00 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:53:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:00 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-21 17:53:00 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@25814980 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@1996710360 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:53:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:00 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:00 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User.roleSet -> SetInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet)@1873106175 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element} -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element})@1671283144 (EntityCollectionPart(ru.kata.spring.boot_security.demo.models.User.roleSet#{element})@1763743694)
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet)@2044422791 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:53:00 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:53:00 - committing
2025-03-21 17:53:00 - Processing flush-time cascades
2025-03-21 17:53:00 - Dirty checking collections
2025-03-21 17:53:00 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#5] (initialized)
2025-03-21 17:53:00 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-21 17:53:00 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-21 17:53:00 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-21 17:53:00 - Listing entities:
2025-03-21 17:53:00 - ru.kata.spring.boot_security.demo.models.User{password=$2a$12$KDR6Q9f.lAGpk9ju.xtKy.cxc04ZFO33kcna7r.SwWmnw4ol2du5K, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro1@kata.com}
2025-03-21 17:53:00 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-21 17:53:00 - Authenticated user
2025-03-21 17:53:00 - Changed session id from 4683200018570B14C375AFE6659F466F
2025-03-21 17:53:00 - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@12b3a563]
2025-03-21 17:53:00 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]
2025-03-21 17:53:00 - Securing GET /admin
2025-03-21 17:53:00 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]]
2025-03-21 17:53:00 - Secured GET /admin
2025-03-21 17:53:00 - GET "/admin", parameters={}
2025-03-21 17:53:00 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:53:00 - HQL : from User WHERE id= :id
2025-03-21 17:53:01 - Encountered use of reserved word as identifier : =
2025-03-21 17:53:01 - Encountered use of reserved word as identifier : <EOF>
2025-03-21 17:53:01 - Unable to resolve unqualified attribute [id] in local from-clause
2025-03-21 17:53:01 - Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id)
2025-03-21 17:53:01 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `ru.kata.spring.boot_security.demo.models.User(5).id`
              :id
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-03-21 17:53:01 - Created new SQL alias : u1_0
2025-03-21 17:53:01 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(5))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:53:01 - Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2025-03-21 17:53:01 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id) 
2025-03-21 17:53:01 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(5)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(5).roleSet]

2025-03-21 17:53:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(5)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:01 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:01 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(5) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(5))@1851450648 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(5).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(5).roleSet)@1083548823 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:53:01 - HQL : FROM User
2025-03-21 17:53:01 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-03-21 17:53:01 - Created new SQL alias : u1_0
2025-03-21 17:53:01 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(6))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:53:01 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(6)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(6).roleSet]

2025-03-21 17:53:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(6)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:01 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:53:01 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(6) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(6))@1740018197 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(6).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(6).roleSet)@120385793 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:53:01 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:01 - begin
2025-03-21 17:53:01 - Created new SQL alias : r1_0
2025-03-21 17:53:01 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(7))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:53:01 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(7)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(7).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(7).userSet]

2025-03-21 17:53:01 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(7)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:01 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:53:01 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(7) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(7))@944037646 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(7).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(7).userSet)@1752258386 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:53:01 - committing
2025-03-21 17:53:01 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:53:01 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-03-21 17:53:01 - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.3.RELEASE (built 2024-12-08T21:30:43+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect: SpringStandard (org.thymeleaf.spring6.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring6.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring6.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring6.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring6.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring6.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring6.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring6.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring6.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring6.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring6.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6839df1c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1ec64aaa
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring6.expression.SpringStandardConversionService@7e96ce3e
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-03-21 17:53:01 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:01 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:01 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:01 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:01 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:01 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:01 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:01 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:01 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:53:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:01 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:01 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:53:01 - Completed 200 OK
2025-03-21 17:53:06 - Securing POST /admin/user
2025-03-21 17:53:06 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]]
2025-03-21 17:53:06 - Secured POST /admin/user
2025-03-21 17:53:06 - PATCH "/admin/user", parameters={masked}
2025-03-21 17:53:06 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#update(User, BindingResult, int, List, Model)
2025-03-21 17:53:06 - Updating user with ID: 26
2025-03-21 17:53:06 - User data: Garry Ford
2025-03-21 17:53:06 - Roles: [2]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:06 - begin
2025-03-21 17:53:06 - Created new SQL alias : r1_0
2025-03-21 17:53:06 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(8))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:53:06 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64480408
2025-03-21 17:53:06 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.Role(8).id) 
2025-03-21 17:53:06 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(8)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(8).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(8).userSet]

2025-03-21 17:53:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(8)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id in (?)
2025-03-21 17:53:06 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(8) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(8))@254062233 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(8).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(8).userSet)@610431692 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:53:06 - committing
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:06 - begin
2025-03-21 17:53:06 - committing
2025-03-21 17:53:06 - Processing flush-time cascades
2025-03-21 17:53:06 - Dirty checking collections
2025-03-21 17:53:06 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#26], was: [<unreferenced>] (initialized)
2025-03-21 17:53:06 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-21 17:53:06 - Collection dereferenced: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:53:06 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2025-03-21 17:53:06 - Flushed: 1 (re)creations, 0 updates, 1 removals to 3 collections
2025-03-21 17:53:06 - Listing entities:
2025-03-21 17:53:06 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-21 17:53:06 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$akDIaoD1wcN476wAnGELeOY0yxCTUH3GJ9ZkNfchBrIIfDjJMf4cS, name=Garry, nickname=Ford, id=26, roleSet=[], age=22, email=garry@kata.com}
2025-03-21 17:53:06 - update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:53:06 - Deleting collection - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:06 - delete from user_roles where user_id=?
2025-03-21 17:53:06 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:06 - No collection rows to insert - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:06 - View name [redirect:], model {}
2025-03-21 17:53:06 - Completed 302 FOUND
2025-03-21 17:53:06 - Securing GET /admin
2025-03-21 17:53:06 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]]
2025-03-21 17:53:06 - Secured GET /admin
2025-03-21 17:53:06 - GET "/admin", parameters={}
2025-03-21 17:53:06 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:53:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:06 - begin
2025-03-21 17:53:06 - Created new SQL alias : r1_0
2025-03-21 17:53:06 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(9))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:53:06 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(9)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(9).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(9).userSet]

2025-03-21 17:53:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(9)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:06 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:53:06 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(9) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(9))@1589520505 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(9).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(9).userSet)@678654941 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:53:06 - committing
2025-03-21 17:53:06 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:06 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:06 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:06 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:06 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:06 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:06 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:06 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:06 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:53:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:06 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:06 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:53:06 - Completed 200 OK
2025-03-21 17:53:22 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:53:22 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:53:43 - Securing POST /admin/user
2025-03-21 17:53:43 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]]
2025-03-21 17:53:43 - Secured POST /admin/user
2025-03-21 17:53:43 - PATCH "/admin/user", parameters={masked}
2025-03-21 17:53:43 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#update(User, BindingResult, int, List, Model)
2025-03-21 17:53:43 - Updating user with ID: 26
2025-03-21 17:53:43 - User data: Garry Ford
2025-03-21 17:53:43 - Roles: [2, 1]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:43 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:43 - begin
2025-03-21 17:53:43 - Created new SQL alias : r1_0
2025-03-21 17:53:43 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(10))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:53:43 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7776a54d
2025-03-21 17:53:43 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.Role(10).id) 
2025-03-21 17:53:43 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b02bc01
2025-03-21 17:53:43 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.Role(10).id) 
2025-03-21 17:53:43 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(10)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(10).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(10).userSet]

2025-03-21 17:53:43 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(10)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id in (?,?)
2025-03-21 17:53:43 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(10).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(10).userSet)@1775831615 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))
	  ru.kata.spring.boot_security.demo.models.Role(10) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(10))@55290669 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))

2025-03-21 17:53:43 - committing
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:43 - begin
2025-03-21 17:53:43 - committing
2025-03-21 17:53:43 - Processing flush-time cascades
2025-03-21 17:53:43 - Dirty checking collections
2025-03-21 17:53:43 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#26], was: [<unreferenced>] (initialized)
2025-03-21 17:53:43 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-21 17:53:43 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#1], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#1] (uninitialized)
2025-03-21 17:53:43 - Collection dereferenced: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:53:43 - Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
2025-03-21 17:53:43 - Flushed: 1 (re)creations, 0 updates, 1 removals to 4 collections
2025-03-21 17:53:43 - Listing entities:
2025-03-21 17:53:43 - ru.kata.spring.boot_security.demo.models.Role{role=USER, id=1, userSet=<uninitialized>}
2025-03-21 17:53:43 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-21 17:53:43 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$cgxYZN80Lh1apngRqxeLoutAJe1F.nHuh3hEvjl2/BNIZr5h7F.Sq, name=Garry, nickname=Ford, id=26, roleSet=[], age=22, email=garry@kata.com}
2025-03-21 17:53:43 - update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:53:43 - Deleting collection - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:43 - delete from user_roles where user_id=?
2025-03-21 17:53:43 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:43 - No collection rows to insert - ru.kata.spring.boot_security.demo.models.User.roleSet : 26
2025-03-21 17:53:43 - View name [redirect:], model {}
2025-03-21 17:53:43 - Completed 302 FOUND
2025-03-21 17:53:43 - Securing GET /admin
2025-03-21 17:53:43 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1d60a8d, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=4683200018570B14C375AFE6659F466F], Granted Authorities=[ADMIN]]]
2025-03-21 17:53:43 - Secured GET /admin
2025-03-21 17:53:43 - GET "/admin", parameters={}
2025-03-21 17:53:43 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:53:43 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:53:43 - begin
2025-03-21 17:53:43 - Created new SQL alias : r1_0
2025-03-21 17:53:43 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(11))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:53:43 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(11)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(11).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(11).userSet]

2025-03-21 17:53:43 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(11)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:53:43 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:53:43 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(11) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(11))@120518548 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(11).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(11).userSet)@1632693204 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:53:43 - committing
2025-03-21 17:53:43 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:43 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:43 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:43 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:43 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:43 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:43 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:43 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:43 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:53:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:53:43 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:53:43 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:53:43 - Completed 200 OK
2025-03-21 17:53:52 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:53:52 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:54:22 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:54:22 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:54:52 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:54:52 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 17:55:00 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-21 17:55:00 - Graceful shutdown complete
2025-03-21 17:55:00 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 17:55:00 - HHH000031: Closing
2025-03-21 17:55:00 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47e019a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@24d73c51]
2025-03-21 17:55:00 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-03-21 17:55:00 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-03-21 17:55:00 - HikariPool-1 - Shutdown initiated...
2025-03-21 17:55:00 - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f581211: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21bfe990: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6082e3ab: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5128e6d7: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@ad1ce4: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@32eabeb7: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4e360e0: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@509fa279: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2b9caddd: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@c39d9b7: (connection evicted)
2025-03-21 17:55:00 - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-03-21 17:55:00 - HikariPool-1 - Shutdown completed.
2025-03-21 17:59:09 - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-03-21 17:59:09 - HV000001: Hibernate Validator 8.0.2.Final
2025-03-21 17:59:09 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:59:09 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:59:09 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:59:09 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:59:09 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:59:09 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:59:09 - Loaded expression factory via original TCCL
2025-03-21 17:59:09 - Starting SpringBootSecurityDemoApplication using Java 23.0.2 with PID 326120 (C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes started by Alexey in C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap)
2025-03-21 17:59:09 - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-21 17:59:09 - No active profile set, falling back to 1 default profile: "default"
2025-03-21 17:59:09 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:59:09 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:59:09 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:59:09 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:59:09 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:59:09 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:59:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-21 17:59:10 - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2025-03-21 17:59:11 - Tomcat initialized with port 8080 (http)
2025-03-21 17:59:11 - Initializing ProtocolHandler ["http-nio-8080"]
2025-03-21 17:59:11 - Starting service [Tomcat]
2025-03-21 17:59:11 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-21 17:59:11 - Initializing Spring embedded WebApplicationContext
2025-03-21 17:59:11 - Root WebApplicationContext: initialization completed in 1306 ms
2025-03-21 17:59:11 - Filter 'hiddenHttpMethodFilter' configured for use
2025-03-21 17:59:11 - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
2025-03-21 17:59:11 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2c7b84de
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b5%d0%b9/Java_study/Kata_PP_3_1_3_BS_Bootstrap/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ru.kata.spring.boot_security.demo.models.Role
		ru.kata.spring.boot_security.demo.models.User]
	Mapping files names []
	Properties []
2025-03-21 17:59:11 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-03-21 17:59:11 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-03-21 17:59:11 - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-03-21 17:59:11 - HHH000206: 'hibernate.properties' not found
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-03-21 17:59:11 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-03-21 17:59:11 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-03-21 17:59:11 - HHH000026: Second-level cache disabled
2025-03-21 17:59:11 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:59:11 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:59:11 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@18cf5c52
2025-03-21 17:59:11 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10618775
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10618775
2025-03-21 17:59:11 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5aea8994
2025-03-21 17:59:11 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@20a3e10c
2025-03-21 17:59:11 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:59:11 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:59:11 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@426c0486
2025-03-21 17:59:11 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:59:11 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:59:11 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e2a6991
2025-03-21 17:59:11 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:59:11 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5002fde9
2025-03-21 17:59:11 - Adding type registration image -> org.hibernate.type.BasicTypeReference@6f96dd64
2025-03-21 17:59:11 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:59:11 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4d7cac24
2025-03-21 17:59:11 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@409732fb
2025-03-21 17:59:11 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73d62b5
2025-03-21 17:59:11 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:59:11 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:59:11 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5e99e2cb
2025-03-21 17:59:11 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:59:11 - Adding type registration int -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:59:11 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76ac68b0
2025-03-21 17:59:11 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-21 17:59:11 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-21 17:59:11 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@f559c74
2025-03-21 17:59:11 - Adding type registration float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-21 17:59:11 - Adding type registration float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-21 17:59:11 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@63917fe1
2025-03-21 17:59:11 - Adding type registration double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:59:11 - Adding type registration double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:59:11 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@720f56e2
2025-03-21 17:59:11 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:59:11 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@677349fb
2025-03-21 17:59:11 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:59:11 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4466cf5d
2025-03-21 17:59:11 - Adding type registration character -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:59:11 - Adding type registration char -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:59:11 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2c60ce47
2025-03-21 17:59:11 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2450256f
2025-03-21 17:59:11 - Adding type registration string -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-21 17:59:11 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@59918c8f
2025-03-21 17:59:11 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b7facc7
2025-03-21 17:59:11 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:59:11 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:59:11 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1c74d19
2025-03-21 17:59:11 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@24197b13
2025-03-21 17:59:11 - Adding type registration text -> org.hibernate.type.BasicTypeReference@71b97eeb
2025-03-21 17:59:11 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2776fd8f
2025-03-21 17:59:11 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:59:11 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1c62c3fd
2025-03-21 17:59:11 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-21 17:59:11 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@734ce281
2025-03-21 17:59:11 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@49b89425
2025-03-21 17:59:11 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59328218
2025-03-21 17:59:11 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5345dfe8
2025-03-21 17:59:11 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@478967eb
2025-03-21 17:59:11 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4a1dda83
2025-03-21 17:59:11 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7f2b39a
2025-03-21 17:59:11 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-21 17:59:11 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7a358613
2025-03-21 17:59:11 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-21 17:59:11 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@760f1081
2025-03-21 17:59:11 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@52621501
2025-03-21 17:59:11 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@52621501
2025-03-21 17:59:11 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-21 17:59:11 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@401e02b4
2025-03-21 17:59:11 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:59:11 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@164d01ba
2025-03-21 17:59:11 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18c880ea
2025-03-21 17:59:11 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ac044ef
2025-03-21 17:59:11 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-21 17:59:11 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6afbe6a1
2025-03-21 17:59:11 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14457a95
2025-03-21 17:59:11 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48567727
2025-03-21 17:59:11 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10e9a5fe
2025-03-21 17:59:11 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:59:11 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@259287ac
2025-03-21 17:59:11 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1abcd059
2025-03-21 17:59:11 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@61a87366
2025-03-21 17:59:11 - Adding type registration date -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-21 17:59:11 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3c33fcf8
2025-03-21 17:59:11 - Adding type registration time -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:59:11 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@dada335
2025-03-21 17:59:11 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:59:11 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:59:11 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@716f94c1
2025-03-21 17:59:11 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:59:11 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:59:11 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@53feeac9
2025-03-21 17:59:11 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@105db94d
2025-03-21 17:59:11 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1d99ee1b
2025-03-21 17:59:11 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:59:11 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3915e7c3
2025-03-21 17:59:11 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-21 17:59:11 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-21 17:59:11 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@167a21b
2025-03-21 17:59:11 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c0df4ab
2025-03-21 17:59:11 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e362407
2025-03-21 17:59:11 - Adding type registration class -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-21 17:59:11 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@388be5fd
2025-03-21 17:59:11 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:59:11 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:59:11 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@440ef8d
2025-03-21 17:59:11 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@17fbfb02
2025-03-21 17:59:11 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@17fbfb02
2025-03-21 17:59:11 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@8f2e3e6
2025-03-21 17:59:11 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@8f2e3e6
2025-03-21 17:59:11 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-21 17:59:11 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f315b08
2025-03-21 17:59:11 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-21 17:59:11 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c8efde4
2025-03-21 17:59:11 - Adding type registration url -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-21 17:59:11 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@24e5389c
2025-03-21 17:59:11 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b170235
2025-03-21 17:59:11 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5e9bf744
2025-03-21 17:59:11 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@45e140ae
2025-03-21 17:59:11 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@48cdb156
2025-03-21 17:59:11 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b4814d0
2025-03-21 17:59:11 - Adding type registration object -> org.hibernate.type.JavaObjectType@38087342
2025-03-21 17:59:11 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38087342
2025-03-21 17:59:11 - Adding type registration null -> org.hibernate.type.NullType@2a04ab05
2025-03-21 17:59:11 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5ebbde60
2025-03-21 17:59:11 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@a056b26
2025-03-21 17:59:11 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2a5abd3c
2025-03-21 17:59:11 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@250967f1
2025-03-21 17:59:11 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@25c1f5ee
2025-03-21 17:59:11 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4bce62b
2025-03-21 17:59:11 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7bf018dd
2025-03-21 17:59:11 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@15a8cebd
2025-03-21 17:59:11 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9] into BootstrapContext; was [null]
2025-03-21 17:59:11 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9) [was null]
2025-03-21 17:59:11 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@200d1a3d] into BootstrapContext; was [null]
2025-03-21 17:59:11 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7de147e9] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12567179]
2025-03-21 17:59:11 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-21 17:59:11 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9]
2025-03-21 17:59:11 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@935d3f9]
2025-03-21 17:59:11 - HikariPool-1 - configuration:
2025-03-21 17:59:11 - allowPoolSuspension.............false
2025-03-21 17:59:11 - autoCommit......................true
2025-03-21 17:59:11 - catalog.........................none
2025-03-21 17:59:11 - connectionInitSql...............none
2025-03-21 17:59:11 - connectionTestQuery.............none
2025-03-21 17:59:11 - connectionTimeout...............30000
2025-03-21 17:59:11 - dataSource......................none
2025-03-21 17:59:11 - dataSourceClassName.............none
2025-03-21 17:59:11 - dataSourceJNDI..................none
2025-03-21 17:59:11 - dataSourceProperties............{password=<masked>}
2025-03-21 17:59:11 - driverClassName................."com.mysql.cj.jdbc.Driver"
2025-03-21 17:59:11 - exceptionOverrideClassName......none
2025-03-21 17:59:11 - healthCheckProperties...........{}
2025-03-21 17:59:11 - healthCheckRegistry.............none
2025-03-21 17:59:11 - idleTimeout.....................600000
2025-03-21 17:59:11 - initializationFailTimeout.......1
2025-03-21 17:59:11 - isolateInternalQueries..........false
2025-03-21 17:59:11 - jdbcUrl.........................jdbc:mysql://localhost:3306/mypp231db?allowPublicKeyRetrieval=TRUE&verifyServerCertificate=false&useSSL=false&requireSSL=false&useLegacyDatetimeCode=false&amp&serverTimezone=UTC
2025-03-21 17:59:11 - keepaliveTime...................0
2025-03-21 17:59:11 - leakDetectionThreshold..........0
2025-03-21 17:59:11 - maxLifetime.....................1800000
2025-03-21 17:59:11 - maximumPoolSize.................10
2025-03-21 17:59:11 - metricRegistry..................none
2025-03-21 17:59:11 - metricsTrackerFactory...........none
2025-03-21 17:59:11 - minimumIdle.....................10
2025-03-21 17:59:11 - password........................<masked>
2025-03-21 17:59:11 - poolName........................"HikariPool-1"
2025-03-21 17:59:11 - readOnly........................false
2025-03-21 17:59:11 - registerMbeans..................false
2025-03-21 17:59:11 - scheduledExecutor...............none
2025-03-21 17:59:11 - schema..........................none
2025-03-21 17:59:11 - threadFactory...................internal
2025-03-21 17:59:11 - transactionIsolation............default
2025-03-21 17:59:11 - username........................"root"
2025-03-21 17:59:11 - validationTimeout...............5000
2025-03-21 17:59:11 - HikariPool-1 - Starting...
2025-03-21 17:59:11 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@28f90752
2025-03-21 17:59:11 - HikariPool-1 - Start completed.
2025-03-21 17:59:11 - Database ->
	   name : MySQL
	version : 8.0.38
	  major : 8
	  minor : 0
2025-03-21 17:59:11 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-03-21 17:59:11 - JDBC version : 4.2
2025-03-21 17:59:11 - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-21 17:59:11 - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.38
2025-03-21 17:59:11 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-03-21 17:59:11 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-03-21 17:59:11 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.38
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-21 17:59:11 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31880efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79295932)
2025-03-21 17:59:11 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2cadcff6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76e00bdb)
2025-03-21 17:59:11 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee2423) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@343d1d25)
2025-03-21 17:59:11 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@762da62b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e5c5e6)
2025-03-21 17:59:11 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76dc36e5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a54c92e)
2025-03-21 17:59:11 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31533eb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fb71788)
2025-03-21 17:59:11 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8cb7185) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dac40b)
2025-03-21 17:59:11 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c54c497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b788dc2)
2025-03-21 17:59:11 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58ec8271) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a44effb)
2025-03-21 17:59:11 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-03-21 17:59:11 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-03-21 17:59:11 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-03-21 17:59:11 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-03-21 17:59:11 - Adding type registration null -> org.hibernate.type.NullType@20184ade
2025-03-21 17:59:11 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2a04ab05`
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-03-21 17:59:11 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:59:11 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:59:11 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:59:11 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:59:11 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:59:11 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-03-21 17:59:11 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:59:11 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:59:11 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-03-21 17:59:11 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79d14037] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c1e40d9]
2025-03-21 17:59:11 - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-03-21 17:59:11 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@783b3d84
2025-03-21 17:59:11 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-03-21 17:59:11 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:59:11 - Import with entity name Role
2025-03-21 17:59:11 - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-03-21 17:59:11 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@390637bf
2025-03-21 17:59:11 - Bind entity ru.kata.spring.boot_security.demo.models.Role on table roles
2025-03-21 17:59:11 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:59:11 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:59:11 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:id]
2025-03-21 17:59:11 - building BasicValue for id
2025-03-21 17:59:11 - Skipping column re-registration: roles.id
2025-03-21 17:59:11 - Building property id
2025-03-21 17:59:11 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:59:11 - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-03-21 17:59:11 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8f5ef98
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='role')
2025-03-21 17:59:11 - MetadataSourceProcessor property role with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.Role:role]
2025-03-21 17:59:11 - building BasicValue for role
2025-03-21 17:59:11 - Skipping column re-registration: roles.role
2025-03-21 17:59:11 - Building property role
2025-03-21 17:59:11 - Binding column: IndexColumn(column='userSet_ORDER')
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='userSet_KEY')
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn(column='userSet_KEY')
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn()
2025-03-21 17:59:11 - Collection role: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:11 - Building property userSet
2025-03-21 17:59:11 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:59:11 - Binding entity from annotated class: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:59:11 - Import with entity name User
2025-03-21 17:59:11 - Bind entity ru.kata.spring.boot_security.demo.models.User on table users
2025-03-21 17:59:11 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:59:11 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:59:11 - MetadataSourceProcessor property id with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:id]
2025-03-21 17:59:11 - building BasicValue for id
2025-03-21 17:59:11 - Skipping column re-registration: users.id
2025-03-21 17:59:11 - Building property id
2025-03-21 17:59:11 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='age')
2025-03-21 17:59:11 - MetadataSourceProcessor property age with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:age]
2025-03-21 17:59:11 - building BasicValue for age
2025-03-21 17:59:11 - Skipping column re-registration: users.age
2025-03-21 17:59:11 - Building property age
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - MetadataSourceProcessor property email with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:email]
2025-03-21 17:59:11 - building BasicValue for email
2025-03-21 17:59:11 - Skipping column re-registration: users.email
2025-03-21 17:59:11 - Building property email
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='username')
2025-03-21 17:59:11 - MetadataSourceProcessor property name with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:name]
2025-03-21 17:59:11 - building BasicValue for name
2025-03-21 17:59:11 - Skipping column re-registration: users.username
2025-03-21 17:59:11 - Building property name
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='usernickname')
2025-03-21 17:59:11 - MetadataSourceProcessor property nickname with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:nickname]
2025-03-21 17:59:11 - building BasicValue for nickname
2025-03-21 17:59:11 - Skipping column re-registration: users.usernickname
2025-03-21 17:59:11 - Building property nickname
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - MetadataSourceProcessor property password with lazy=false
2025-03-21 17:59:11 - Attempting to locate auto-apply AttributeConverter for property [ru.kata.spring.boot_security.demo.models.User:password]
2025-03-21 17:59:11 - building BasicValue for password
2025-03-21 17:59:11 - Skipping column re-registration: users.password
2025-03-21 17:59:11 - Building property password
2025-03-21 17:59:11 - Binding column: IndexColumn(column='roleSet_ORDER')
2025-03-21 17:59:11 - Binding column: AnnotatedColumn()
2025-03-21 17:59:11 - Binding column: AnnotatedColumn(column='roleSet_KEY')
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn(column='roleSet_KEY')
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-03-21 17:59:11 - Binding column: AnnotatedJoinColumn(column='role_id')
2025-03-21 17:59:11 - Collection role: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:11 - Building property roleSet
2025-03-21 17:59:11 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for role
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for age
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for nickname
2025-03-21 17:59:11 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-03-21 17:59:11 - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-03-21 17:59:11 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5929c8f0
2025-03-21 17:59:11 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
2025-03-21 17:59:11 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-03-21 17:59:11 - Second pass for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:11 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:11 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:59:12 - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:59:12 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2025-03-21 17:59:12 - Mapped collection key: user_id, element: role_id
2025-03-21 17:59:12 - Second pass for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - Binding a ManyToMany: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - HHH000194: Package not found or no package-info.java: ru.kata.spring.boot_security.demo.models
2025-03-21 17:59:12 - Retrieving property ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:12 - Mapped collection key: role_id, element: user_id
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-03-21 17:59:12 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e354248
2025-03-21 17:59:12 - Building session factory
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-03-21 17:59:12 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d67f568
2025-03-21 17:59:12 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:59:12 - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5ebf776c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap\target\classes;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.4.2\spring-boot-starter-thymeleaf-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.2\spring-boot-starter-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.2\spring-boot-autoconfigure-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.2\spring-boot-starter-logging-3.4.2.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-classic\1.5.16\logback-classic-1.5.16.jar;C:\Users\Алексей\.m2\repository\ch\qos\logback\logback-core\1.5.16\logback-core-1.5.16.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Алексей\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\Алексей\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Алексей\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.3.RELEASE\thymeleaf-spring6-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\thymeleaf\thymeleaf\3.1.3.RELEASE\thymeleaf-3.1.3.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\attoparser\attoparser\2.0.7.RELEASE\attoparser-2.0.7.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Алексей\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.2\spring-boot-starter-web-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.2\spring-boot-starter-json-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.2\spring-boot-starter-tomcat-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-web\6.2.2\spring-web-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-beans\6.2.2\spring-beans-6.2.2.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-observation\1.14.3\micrometer-observation-1.14.3.jar;C:\Users\Алексей\.m2\repository\io\micrometer\micrometer-commons\1.14.3\micrometer-commons-1.14.3.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-webmvc\6.2.2\spring-webmvc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-context\6.2.2\spring-context-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-expression\6.2.2\spring-expression-6.2.2.jar;C:\Users\Алексей\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Алексей\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Алексей\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-core\6.2.2\spring-core-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jcl\6.2.2\spring-jcl-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.2\spring-boot-starter-security-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aop\6.2.2\spring-aop-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.2\spring-boot-starter-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\hibernate\orm\hibernate-core\6.6.5.Final\hibernate-core-6.6.5.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Алексей\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Алексей\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Алексей\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Алексей\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Алексей\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Алексей\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Алексей\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Алексей\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Алексей\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-jpa\3.4.2\spring-data-jpa-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\data\spring-data-commons\3.4.2\spring-data-commons-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-orm\6.2.2\spring-orm-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-tx\6.2.2\spring-tx-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-aspects\6.2.2\spring-aspects-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.2\spring-boot-starter-jdbc-3.4.2.jar;C:\Users\Алексей\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Алексей\.m2\repository\org\springframework\spring-jdbc\6.2.2\spring-jdbc-6.2.2.jar;C:\Users\Алексей\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.2\spring-boot-starter-validation-3.4.2.jar;C:\Users\Алексей\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\Алексей\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\Алексей\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Алексей\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Baku, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 11, APPLICATION_NAME=Kata_3_1_2_S_Boot, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin, sun.java.command=ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7fd3fd06, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\Алексей, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\Алексей\.jdks\openjdk-23.0.2, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=Zero based, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7-58, user.name=Alexey, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\CD86~1\AppData\Local\Temp\, catalina.home=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.2213449373855561679, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\Алексей\Java_study\Kata_PP_3_1_3_BS_Bootstrap, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=326120, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\Алексей\AppData\Local\Temp\tomcat.8080.2213449373855561679, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@54ae1240, native.encoding=Cp1251, java.library.path=C:\Users\Алексей\.jdks\openjdk-23.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\app\18c\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\app\apache-maven-3.9.8\bin;C:\Users\Алексей\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.3\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.2.4\bin;;C:\Microsoft VS Code\bin;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7-58, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=67.0, LOGGED_APPLICATION_NAME=[Kata_3_1_2_S_Boot] }
2025-03-21 17:59:12 - Session factory constructed with filter configurations : {}
2025-03-21 17:59:12 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:59:12 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:59:12 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:59:12 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:59:12 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:59:12 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:59:12 - Loaded expression factory via original TCCL
2025-03-21 17:59:12 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:59:12 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:59:12 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:59:12 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:59:12 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:59:12 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:59:12 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:59:12 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-03-21 17:59:12 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@fc79a2b
2025-03-21 17:59:12 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:59:12 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:59:12 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-03-21 17:59:12 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@519ffcb9
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@154b0748] under count; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@70e5737f] under every; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@9746157] under any; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d4a34ff] under sinh; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7cbede2b] under cosh; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ef04613] under tanh; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d3d4a54] under pi; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@215c6ec0] under log; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : length -> character_length
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@13047d3d] under position; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3601549f] under overlay; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@33f2cf82] under trim; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@fcd3a6f] under cast; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7845ee8a] under collate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@27d6267e] under extract; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@637506d8] under ifnull; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@18f4086e] under pad; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5cf3a7f9] under str; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@323eecf8] under format; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@20b67366] under timestampadd; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4679554d] under timestampdiff; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : dateadd -> timestampadd
2025-03-21 17:59:12 - Registering alternate key : datediff -> timestampdiff
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5bba9949] under current_date; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@147059f8] under current_time; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@744fb110] under current_timestamp; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : current date -> current_date
2025-03-21 17:59:12 - Registering alternate key : current time -> current_time
2025-03-21 17:59:12 - Registering alternate key : current timestamp -> current_timestamp
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@838e109] under local_date; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7474196] under local_time; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11ee671f] under local_datetime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18209303] under offset_datetime; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : local date -> local_date
2025-03-21 17:59:12 - Registering alternate key : local time -> local_time
2025-03-21 17:59:12 - Registering alternate key : local datetime -> local_datetime
2025-03-21 17:59:12 - Registering alternate key : offset datetime -> offset_datetime
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57df09a7] under instant; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : current_instant -> instant
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3b046e64] under sql; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@215c6ec0
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3921135e] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3a239dac] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : day -> dayofmonth
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@759f45f1] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@13047d3d
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1bde9a22] under trunc; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : truncate -> trunc
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cc97e47] under bitand; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74a03bd5] under bitor; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@87fc0fc] under bitxor; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@671f545b] under bitnot; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@c335b9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@323eecf8
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7474196
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@11ee671f
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c8d8e7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d3d4a54
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c68e82] under chr; prior registration was null
2025-03-21 17:59:12 - Registering alternate key : char -> chr
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e66bf2d] under sysdate; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@a859c5] under rank; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@37083af6] under dense_rank; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@55e4dd68] under percent_rank; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@28c7fd9d] under cume_dist; prior registration was null
2025-03-21 17:59:12 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@788a0513] under listagg; prior registration was null
2025-03-21 17:59:12 - abs(NUMERIC arg)
2025-03-21 17:59:12 - Double acos(NUMERIC arg)
2025-03-21 17:59:12 - adddate(DATE datetime, INTEGER days)
2025-03-21 17:59:12 - addtime(TIME datetime, TIME time)
2025-03-21 17:59:12 - Boolean any(BOOLEAN arg)
2025-03-21 17:59:12 - Integer ascii(STRING arg)
2025-03-21 17:59:12 - Double asin(NUMERIC arg)
2025-03-21 17:59:12 - Double atan(NUMERIC arg)
2025-03-21 17:59:12 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:59:12 - avg(arg)
2025-03-21 17:59:12 - bit_and(arg)
2025-03-21 17:59:12 - Integer bit_length(STRING_OR_CLOB arg)
2025-03-21 17:59:12 - bit_or(arg)
2025-03-21 17:59:12 - bitand(arg0, arg1)
2025-03-21 17:59:12 - bitnot(arg)
2025-03-21 17:59:12 - bitor(arg0, arg1)
2025-03-21 17:59:12 - bitxor(arg0, arg1)
2025-03-21 17:59:12 - cast(arg as Type)
2025-03-21 17:59:12 - ceiling(NUMERIC arg)
2025-03-21 17:59:12 - Character char(INTEGER arg)
2025-03-21 17:59:12 - Integer character_length(STRING_OR_CLOB arg)
2025-03-21 17:59:12 - Character chr(INTEGER arg)
2025-03-21 17:59:12 - coalesce(arg0[, arg1[, ...]])
2025-03-21 17:59:12 - String collate(STRING string as COLLATION collation)
2025-03-21 17:59:12 - String concat(STRING string0[, STRING string1[, ...]])
2025-03-21 17:59:12 - Double cos(NUMERIC arg)
2025-03-21 17:59:12 - Double cosh(NUMERIC arg)
2025-03-21 17:59:12 - Double cot(NUMERIC arg)
2025-03-21 17:59:12 - Long count([distinct ]{arg|*})
2025-03-21 17:59:12 - Integer crc32(arg)
2025-03-21 17:59:12 - Double cume_dist([arg0[, ...]])
2025-03-21 17:59:12 - Date curdate()
2025-03-21 17:59:12 - Date current date
2025-03-21 17:59:12 - Time current time
2025-03-21 17:59:12 - Timestamp current timestamp
2025-03-21 17:59:12 - Date current_date
2025-03-21 17:59:12 - Instant current_instant
2025-03-21 17:59:12 - Time current_time
2025-03-21 17:59:12 - Timestamp current_timestamp
2025-03-21 17:59:12 - Time curtime()
2025-03-21 17:59:12 - Date date(arg)
2025-03-21 17:59:12 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:59:12 - Integer datediff(DATE end, DATE start)
2025-03-21 17:59:12 - Integer day(DATE arg)
2025-03-21 17:59:12 - String dayname(DATE arg)
2025-03-21 17:59:12 - Integer dayofmonth(DATE arg)
2025-03-21 17:59:12 - Integer dayofweek(DATE arg)
2025-03-21 17:59:12 - Integer dayofyear(DATE arg)
2025-03-21 17:59:12 - Double degrees(NUMERIC arg)
2025-03-21 17:59:12 - Long dense_rank([arg0[, ...]])
2025-03-21 17:59:12 - Boolean every(BOOLEAN arg)
2025-03-21 17:59:12 - Double exp(NUMERIC arg)
2025-03-21 17:59:12 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-03-21 17:59:12 - first_valueANY value
2025-03-21 17:59:12 - floor(NUMERIC arg)
2025-03-21 17:59:12 - String format(TEMPORAL datetime as STRING pattern)
2025-03-21 17:59:12 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:59:12 - Integer hour(TIME arg)
2025-03-21 17:59:12 - ifnull(arg0, arg1)
2025-03-21 17:59:12 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-03-21 17:59:12 - Instant instant
2025-03-21 17:59:12 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-03-21 17:59:12 - lagANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:59:12 - Date last_day(DATE arg)
2025-03-21 17:59:12 - last_valueANY value
2025-03-21 17:59:12 - leadANY value[, INTEGER offset[, ANY default]]
2025-03-21 17:59:12 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-03-21 17:59:12 - String left(STRING string, INTEGER length)
2025-03-21 17:59:12 - Integer length(STRING_OR_CLOB arg)
2025-03-21 17:59:12 - String listagg(STRING arg0, STRING arg1)
2025-03-21 17:59:12 - Double ln(NUMERIC arg)
2025-03-21 17:59:12 - LocalDate local date
2025-03-21 17:59:12 - LocalDateTime local datetime
2025-03-21 17:59:12 - LocalTime local time
2025-03-21 17:59:12 - LocalDate local_date
2025-03-21 17:59:12 - LocalDateTime local_datetime
2025-03-21 17:59:12 - LocalTime local_time
2025-03-21 17:59:12 - Timestamp localtime
2025-03-21 17:59:12 - Timestamp localtimestamp
2025-03-21 17:59:12 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-03-21 17:59:12 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-03-21 17:59:12 - Double log10(NUMERIC arg)
2025-03-21 17:59:12 - Double log2(NUMERIC arg)
2025-03-21 17:59:12 - String lower(STRING string)
2025-03-21 17:59:12 - String lpad(string, length[, padding])
2025-03-21 17:59:12 - String ltrim(STRING string[, STRING characters])
2025-03-21 17:59:12 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-03-21 17:59:12 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-03-21 17:59:12 - max(COMPARABLE arg)
2025-03-21 17:59:12 - String md5(arg)
2025-03-21 17:59:12 - Integer microsecond(TIME arg)
2025-03-21 17:59:12 - min(COMPARABLE arg)
2025-03-21 17:59:12 - Integer minute(TIME arg)
2025-03-21 17:59:12 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-03-21 17:59:12 - Integer month(DATE arg)
2025-03-21 17:59:12 - String monthname(DATE arg)
2025-03-21 17:59:12 - Timestamp now()
2025-03-21 17:59:12 - nth_valueANY value, INTEGER nth
2025-03-21 17:59:12 - nullif(arg0, arg1)
2025-03-21 17:59:12 - Integer octet_length(STRING_OR_CLOB arg)
2025-03-21 17:59:12 - OffsetDateTime offset datetime
2025-03-21 17:59:12 - OffsetDateTime offset_datetime
2025-03-21 17:59:12 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-03-21 17:59:12 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-03-21 17:59:12 - Double percent_rank([arg0[, ...]])
2025-03-21 17:59:12 - Double pi
2025-03-21 17:59:12 - Integer position(STRING pattern in STRING string)
2025-03-21 17:59:12 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-03-21 17:59:12 - Integer quarter(DATE arg)
2025-03-21 17:59:12 - Double radians(NUMERIC arg)
2025-03-21 17:59:12 - Double rand([INTEGER seed])
2025-03-21 17:59:12 - Long rank([arg0[, ...]])
2025-03-21 17:59:12 - String repeat(STRING string, INTEGER times)
2025-03-21 17:59:12 - String replace(STRING string, STRING pattern, STRING replacement)
2025-03-21 17:59:12 - String reverse(STRING arg)
2025-03-21 17:59:12 - String right(STRING string, INTEGER length)
2025-03-21 17:59:12 - round(NUMERIC number[, INTEGER places])
2025-03-21 17:59:12 - Long row_number()
2025-03-21 17:59:12 - String rpad(string, length[, padding])
2025-03-21 17:59:12 - String rtrim(STRING string[, STRING characters])
2025-03-21 17:59:12 - Integer second(TIME arg)
2025-03-21 17:59:12 - String sha(arg)
2025-03-21 17:59:12 - String sha1(arg)
2025-03-21 17:59:12 - String sha2(arg0, arg1)
2025-03-21 17:59:12 - Integer sign(NUMERIC arg)
2025-03-21 17:59:12 - Double sin(NUMERIC arg)
2025-03-21 17:59:12 - Double sinh(NUMERIC arg)
2025-03-21 17:59:12 - String soundex(arg)
2025-03-21 17:59:12 - String space(INTEGER arg)
2025-03-21 17:59:12 - Object sql
2025-03-21 17:59:12 - Double sqrt(NUMERIC arg)
2025-03-21 17:59:12 - Double stddev(NUMERIC arg)
2025-03-21 17:59:12 - Double stddev_pop(NUMERIC arg)
2025-03-21 17:59:12 - Double stddev_samp(NUMERIC arg)
2025-03-21 17:59:12 - String str(arg)
2025-03-21 17:59:12 - subdate(DATE datetime, INTEGER days)
2025-03-21 17:59:12 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-03-21 17:59:12 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-03-21 17:59:12 - subtime(TIME datetime, TIME time)
2025-03-21 17:59:12 - sum(arg)
2025-03-21 17:59:12 - Timestamp sysdate()
2025-03-21 17:59:12 - Double tan(NUMERIC arg)
2025-03-21 17:59:12 - Double tanh(NUMERIC arg)
2025-03-21 17:59:12 - String time(arg)
2025-03-21 17:59:12 - Timestamp timestamp(arg0[, arg1])
2025-03-21 17:59:12 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-03-21 17:59:12 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-03-21 17:59:12 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-03-21 17:59:12 - trunc( ... )
2025-03-21 17:59:12 - truncate( ... )
2025-03-21 17:59:12 - String upper(STRING string)
2025-03-21 17:59:12 - Date utc_date
2025-03-21 17:59:12 - Time utc_time
2025-03-21 17:59:12 - Timestamp utc_timestamp
2025-03-21 17:59:12 - Double var_pop(NUMERIC arg)
2025-03-21 17:59:12 - Double var_samp(NUMERIC arg)
2025-03-21 17:59:12 - Double variance(NUMERIC arg)
2025-03-21 17:59:12 - Integer week(DATE arg)
2025-03-21 17:59:12 - Integer year(DATE arg)
2025-03-21 17:59:12 - Starting QueryInterpretationCache(2048)
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-03-21 17:59:12 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ce00fb0
2025-03-21 17:59:12 - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:59:12 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-03-21 17:59:12 - Configured EntityCopyObserver strategy: disallow
2025-03-21 17:59:12 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.Role] is safe
2025-03-21 17:59:12 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:59:12 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.Role]: private accessor [role]
2025-03-21 17:59:12 - Not known whether passed class name [ru.kata.spring.boot_security.demo.models.User] is safe
2025-03-21 17:59:12 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:59:12 - HHH000513: Unable to create the ReflectionOptimizer for [ru.kata.spring.boot_security.demo.models.User]: private accessor [age]
2025-03-21 17:59:12 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:12 - Skipping collection inserts - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - Skipping collection row updates - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - Skipping collection row deletions - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - Skipping collection removals - ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - Starting post-init callbacks
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet)#finishInitialization
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.Role.userSet) - key descriptor
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.Role) `staticFetchableList` generator
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.User.roleSet#{element}]) - element descriptor
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet)#finishInitialization
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping(ru.kata.spring.boot_security.demo.models.User.roleSet) - key descriptor
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : Entity(ru.kata.spring.boot_security.demo.models.User) `staticFetchableList` generator
2025-03-21 17:59:12 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[ru.kata.spring.boot_security.demo.models.Role.userSet#{element}]) - element descriptor
2025-03-21 17:59:12 - Created new SQL alias : r1_0
2025-03-21 17:59:12 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:59:12 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role.role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:59:12 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:59:12 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.Role
2025-03-21 17:59:12 -  Version select: select id from roles where id=?
2025-03-21 17:59:12 -  Insert (0): insert into roles (role) values (?)
2025-03-21 17:59:12 -  Update (0): update roles set role=? where id=?
2025-03-21 17:59:12 -  Delete (0): delete from roles where id=?
2025-03-21 17:59:12 - Created new SQL alias : u1_0
2025-03-21 17:59:12 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:59:12 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User.password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:59:12 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:59:12 - Static SQL for entity: ru.kata.spring.boot_security.demo.models.User
2025-03-21 17:59:12 -  Version select: select id from users where id=?
2025-03-21 17:59:12 -  Insert (0): insert into users (age,email,username,usernickname,password) values (?,?,?,?,?)
2025-03-21 17:59:12 -  Update (0): update users set age=?,email=?,username=?,usernickname=?,password=? where id=?
2025-03-21 17:59:12 -  Delete (0): delete from users where id=?
2025-03-21 17:59:12 - Created new SQL alias : rs1_0
2025-03-21 17:59:12 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.User.roleSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet] 
2025-03-21 17:59:12 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43b74979] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.User.roleSet.{element}] 
2025-03-21 17:59:12 - Created new SQL alias : rs1_1
2025-03-21 17:59:12 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.User.roleSet]

2025-03-21 17:59:12 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet) {
          primaryTableReference : user_roles as rs1_0
          TableGroupJoins {
             join LazyTableGroup (rs1 : ru.kata.spring.boot_security.demo.models.User.roleSet.{element}) {
              primaryTableReference : roles as rs1_1
            }
          }
        }
      }
    }

2025-03-21 17:59:12 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 17:59:12 -  Row insert: insert into user_roles (user_id,role_id) values (?,?)
2025-03-21 17:59:12 -  Row delete: delete from user_roles where user_id=? and role_id=?
2025-03-21 17:59:12 -  One-shot delete: delete from user_roles where user_id=?
2025-03-21 17:59:12 - Created new SQL alias : us1_0
2025-03-21 17:59:12 - Registration of TableGroup [CollectionTableGroup(ru.kata.spring.boot_security.demo.models.Role.userSet)] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet] 
2025-03-21 17:59:12 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@20923380] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role.userSet.{element}] 
2025-03-21 17:59:12 - Created new SQL alias : us1_1
2025-03-21 17:59:12 - DomainResult Graph:
 \-CollectionDomainResult [ru.kata.spring.boot_security.demo.models.Role.userSet]

2025-03-21 17:59:12 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet) {
          primaryTableReference : user_roles as us1_0
          TableGroupJoins {
             join LazyTableGroup (us1 : ru.kata.spring.boot_security.demo.models.Role.userSet.{element}) {
              primaryTableReference : users as us1_1
            }
          }
        }
      }
    }

2025-03-21 17:59:12 - Static SQL for collection: ru.kata.spring.boot_security.demo.models.Role.userSet
2025-03-21 17:59:12 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-21 17:59:12 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79d14037] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@45302e66]
2025-03-21 17:59:12 - Checking 0 named HQL queries
2025-03-21 17:59:12 - Checking 0 named SQL queries
2025-03-21 17:59:12 - No alter strings for table : roles
2025-03-21 17:59:12 - No alter strings for table : user_roles
2025-03-21 17:59:12 - No alter strings for table : users
2025-03-21 17:59:12 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7dd2a5f7
2025-03-21 17:59:12 - Registering SessionFactory: bc8f59e9-dbe7-4ee5-9842-c6be1e604ae0 (<unnamed>)
2025-03-21 17:59:12 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-03-21 17:59:12 - Instantiated SessionFactory
2025-03-21 17:59:12 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 17:59:12 - Statistics initialized [enabled=false]
2025-03-21 17:59:13 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:59:13 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy120.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:307)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at ru.kata.spring.boot_security.demo.SpringBootSecurityDemoApplication.main(SpringBootSecurityDemoApplication.java:12)
2025-03-21 17:59:13 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-21 17:59:13 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-03-21 17:59:13 - Adding welcome page template: index
2025-03-21 17:59:13 - 
	r.k.s.b.d.c.AdminController:
	{PATCH [/admin/user]}: update(User,BindingResult,int,List,Model)
	{POST [/admin]}: add(User,BindingResult,List,Model)
	{DELETE [/admin/user]}: delete(int)
	{GET [/admin/ref]}: ref(int,Model)
	{GET [/admin]}: showUsers(Model)
2025-03-21 17:59:13 - 
	r.k.s.b.d.c.NoAuthenticatedController:
	{GET [/]}: goIndex(Model)
	{GET [/index]}: goAdmin()
2025-03-21 17:59:13 - 
	r.k.s.b.d.c.UserController:
	{GET [/user]}: goUser(Model)
2025-03-21 17:59:13 - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-03-21 17:59:13 - 10 mappings in 'requestMappingHandlerMapping'
2025-03-21 17:59:13 - 'viewControllerHandlerMapping' {/user=ParameterizableViewController [view="user"]}
2025-03-21 17:59:13 - 'beanNameHandlerMapping' {}
2025-03-21 17:59:13 - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-03-21 17:59:13 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, DefaultResourcesFilter, DefaultLoginPageGeneratingFilter, DefaultLogoutPageGeneratingFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-21 17:59:13 - Loaded expression factory via original TCCL
2025-03-21 17:59:13 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-03-21 17:59:13 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-03-21 17:59:13 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-03-21 17:59:13 - Trying to load META-INF/validation.xml via user class loader
2025-03-21 17:59:13 - Trying to load META-INF/validation.xml via TCCL
2025-03-21 17:59:13 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-03-21 17:59:13 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-03-21 17:59:13 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-03-21 17:59:13 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-03-21 17:59:13 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-03-21 17:59:13 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-03-21 17:59:13 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-03-21 17:59:13 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-03-21 17:59:13 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-03-21 17:59:13 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-03-21 17:59:13 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-21 17:59:13 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-21 17:59:13 - Starting ProtocolHandler ["http-nio-8080"]
2025-03-21 17:59:13 - Tomcat started on port 8080 (http) with context path '/'
2025-03-21 17:59:13 - Started SpringBootSecurityDemoApplication in 4.319 seconds (process running for 5.118)
2025-03-21 17:59:15 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-21 17:59:15 - Initializing Servlet 'dispatcherServlet'
2025-03-21 17:59:15 - Detected StandardServletMultipartResolver
2025-03-21 17:59:15 - Detected AcceptHeaderLocaleResolver
2025-03-21 17:59:15 - Detected FixedThemeResolver
2025-03-21 17:59:15 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7acbd3d0
2025-03-21 17:59:15 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@36f1bd7e
2025-03-21 17:59:15 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-21 17:59:15 - Completed initialization in 1 ms
2025-03-21 17:59:15 - Securing GET /admin
2025-03-21 17:59:15 - Set SecurityContextHolder to anonymous SecurityContext
2025-03-21 17:59:15 - Saved request http://localhost:8080/admin?continue to session
2025-03-21 17:59:15 - Redirecting to http://localhost:8080/login
2025-03-21 17:59:15 - Securing GET /login
2025-03-21 17:59:16 - Securing GET /default-ui.css
2025-03-21 17:59:23 - Securing POST /login
2025-03-21 17:59:23 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:59:23 - begin
2025-03-21 17:59:23 - Created new SQL alias : u1_0
2025-03-21 17:59:23 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(2))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:59:23 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18d5c542
2025-03-21 17:59:23 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(2).email) 
2025-03-21 17:59:23 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(2)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(2).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(2).roleSet]

2025-03-21 17:59:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(2)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:59:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:59:23 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-21 17:59:23 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(2) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(2))@462575148 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(2).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(2).roleSet)@99194628 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:59:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:23 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:23 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User.roleSet -> SetInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet)@1263119598 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element} -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element})@535431068 (EntityCollectionPart(ru.kata.spring.boot_security.demo.models.User.roleSet#{element})@1806639131)
	  ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User.roleSet.{element}.userSet)@1777159917 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:59:23 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:59:23 - committing
2025-03-21 17:59:23 - Processing flush-time cascades
2025-03-21 17:59:23 - Dirty checking collections
2025-03-21 17:59:23 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#5], was: [ru.kata.spring.boot_security.demo.models.User.roleSet#5] (initialized)
2025-03-21 17:59:23 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#2], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#2] (uninitialized)
2025-03-21 17:59:23 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-21 17:59:23 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-21 17:59:23 - Listing entities:
2025-03-21 17:59:23 - ru.kata.spring.boot_security.demo.models.User{password=$2a$12$KDR6Q9f.lAGpk9ju.xtKy.cxc04ZFO33kcna7r.SwWmnw4ol2du5K, name=Petro, nickname=Goleador, id=5, roleSet=[ru.kata.spring.boot_security.demo.models.Role#2], age=25, email=petro1@kata.com}
2025-03-21 17:59:23 - ru.kata.spring.boot_security.demo.models.Role{role=ADMIN, id=2, userSet=<uninitialized>}
2025-03-21 17:59:24 - Authenticated user
2025-03-21 17:59:24 - Changed session id from 79081C39374B6778F66F52014506FDB0
2025-03-21 17:59:24 - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1c8ab062, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=79081C39374B6778F66F52014506FDB0], Granted Authorities=[ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4449dab1]
2025-03-21 17:59:24 - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1c8ab062, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=79081C39374B6778F66F52014506FDB0], Granted Authorities=[ADMIN]]
2025-03-21 17:59:24 - Securing GET /admin
2025-03-21 17:59:24 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1c8ab062, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=79081C39374B6778F66F52014506FDB0], Granted Authorities=[ADMIN]]]
2025-03-21 17:59:24 - Secured GET /admin
2025-03-21 17:59:24 - GET "/admin", parameters={}
2025-03-21 17:59:24 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 17:59:24 - HQL : from User WHERE id= :id
2025-03-21 17:59:24 - Encountered use of reserved word as identifier : =
2025-03-21 17:59:24 - Encountered use of reserved word as identifier : <EOF>
2025-03-21 17:59:24 - Unable to resolve unqualified attribute [id] in local from-clause
2025-03-21 17:59:24 - Applying inferable type to SqmExpression [SqmNamedParameter(id)] : null -> SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id)
2025-03-21 17:59:24 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(5)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `ru.kata.spring.boot_security.demo.models.User(5).id`
              :id
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-03-21 17:59:24 - Created new SQL alias : u1_0
2025-03-21 17:59:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(5))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:59:24 - Determining mapping-model type for SqmParameter : SqmNamedParameter(id)
2025-03-21 17:59:24 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(5).id) 
2025-03-21 17:59:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(5)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(5).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(5).roleSet]

2025-03-21 17:59:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(5)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:59:24 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 17:59:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(5) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(5))@1078284304 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(5).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(5).roleSet)@1138707904 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:59:24 - HQL : FROM User
2025-03-21 17:59:24 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(6)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-03-21 17:59:24 - Created new SQL alias : u1_0
2025-03-21 17:59:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(6))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 17:59:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(6)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(6).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(6).roleSet]

2025-03-21 17:59:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(6)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:59:24 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 17:59:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(6) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(6))@176971568 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(6).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(6).roleSet)@1736682476 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 17:59:24 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 17:59:24 - begin
2025-03-21 17:59:24 - Created new SQL alias : r1_0
2025-03-21 17:59:24 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(7))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 17:59:24 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(7)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(7).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(7).userSet]

2025-03-21 17:59:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(7)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 17:59:24 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 17:59:24 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(7) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(7))@1338806277 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(7).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(7).userSet)@2061025958 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 17:59:24 - committing
2025-03-21 17:59:24 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 17:59:24 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2025-03-21 17:59:24 - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.1.3.RELEASE (built 2024-12-08T21:30:43+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring6.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect: SpringStandard (org.thymeleaf.spring6.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring6.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring6.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring6.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring6.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring6.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring6.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring6.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring6.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring6.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring6.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring6.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #temporals
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@cbac5d6
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@50fbdca3
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring6.expression.SpringStandardConversionService@e1baf0
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2025-03-21 17:59:24 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 17:59:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 17:59:24 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 17:59:24 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 17:59:24 - Completed 200 OK
2025-03-21 17:59:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 17:59:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:00:10 - Securing POST /admin
2025-03-21 18:00:10 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1c8ab062, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=79081C39374B6778F66F52014506FDB0], Granted Authorities=[ADMIN]]]
2025-03-21 18:00:10 - Secured POST /admin
2025-03-21 18:00:10 - POST "/admin", parameters={masked}
2025-03-21 18:00:10 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#add(User, BindingResult, List, Model)
2025-03-21 18:00:10 - HQL : FROM User WHERE email = :email
2025-03-21 18:00:10 - Unable to resolve unqualified attribute [email] in local from-clause
2025-03-21 18:00:10 - Applying inferable type to SqmExpression [SqmNamedParameter(email)] : null -> SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(8).email)
2025-03-21 18:00:10 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `ru.kata.spring.boot_security.demo.models.User(8)`
            <- [root] - `ru.kata.spring.boot_security.demo.models.User(8)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `ru.kata.spring.boot_security.demo.models.User(8)`
          <- [root] - `ru.kata.spring.boot_security.demo.models.User(8)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `ru.kata.spring.boot_security.demo.models.User(8).email`
              :email
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-03-21 18:00:10 - Created new SQL alias : u1_0
2025-03-21 18:00:10 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.User(8))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.User] for NavigablePath [ru.kata.spring.boot_security.demo.models.User] 
2025-03-21 18:00:10 - Determining mapping-model type for SqmParameter : SqmNamedParameter(email)
2025-03-21 18:00:10 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.User(8).email) 
2025-03-21 18:00:10 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.User(8)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(8).age]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(8).email]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(8).name]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(8).nickname]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.User(8).password]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.User(8).roleSet]

2025-03-21 18:00:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : ru.kata.spring.boot_security.demo.models.User(8)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 18:00:10 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.email=?
2025-03-21 18:00:10 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.User(8) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.User(8))@746068604 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.User))
	  ru.kata.spring.boot_security.demo.models.User(8).roleSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.User(8).roleSet)@1124643619 (PluralAttribute(ru.kata.spring.boot_security.demo.models.User.roleSet))

2025-03-21 18:00:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 18:00:10 - begin
2025-03-21 18:00:10 - Created new SQL alias : r1_0
2025-03-21 18:00:10 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(9))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 18:00:10 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f9ac4d7
2025-03-21 18:00:10 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(ru.kata.spring.boot_security.demo.models.Role(9).id) 
2025-03-21 18:00:10 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(9)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(9).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(9).userSet]

2025-03-21 18:00:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(9)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 18:00:10 - select r1_0.id,r1_0.role from roles r1_0 where r1_0.id in (?)
2025-03-21 18:00:10 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(9) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(9))@695057243 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))
	  ru.kata.spring.boot_security.demo.models.Role(9).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(9).userSet)@1693879205 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))

2025-03-21 18:00:10 - committing
2025-03-21 18:00:10 - begin
2025-03-21 18:00:10 - Executing identity-insert immediately
2025-03-21 18:00:10 - insert into users (age,email,username,usernickname,password) values (?,?,?,?,?)
2025-03-21 18:00:10 - Initializer list is empty
2025-03-21 18:00:10 - Extracted generated values [ru.kata.spring.boot_security.demo.models.User]: [Ljava.lang.Object;@3e0f7691
2025-03-21 18:00:10 - committing
2025-03-21 18:00:10 - Processing flush-time cascades
2025-03-21 18:00:10 - Dirty checking collections
2025-03-21 18:00:10 - Collection found: [ru.kata.spring.boot_security.demo.models.Role.userSet#1], was: [ru.kata.spring.boot_security.demo.models.Role.userSet#1] (uninitialized)
2025-03-21 18:00:10 - Collection found: [ru.kata.spring.boot_security.demo.models.User.roleSet#30], was: [<unreferenced>] (initialized)
2025-03-21 18:00:10 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-03-21 18:00:10 - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2025-03-21 18:00:10 - Listing entities:
2025-03-21 18:00:10 - ru.kata.spring.boot_security.demo.models.Role{role=USER, id=1, userSet=<uninitialized>}
2025-03-21 18:00:10 - ru.kata.spring.boot_security.demo.models.User{password=$2a$10$CbfBmhxS/RL/L.D/hOJLzeGu29ZMMRiVkjprxd4fAwQ.lnMQ3Kv4u, name=Chakil, nickname=Oneal, id=30, roleSet=[ru.kata.spring.boot_security.demo.models.Role#1], age=1, email=ch@kata.com}
2025-03-21 18:00:10 - Inserting collection rows - ru.kata.spring.boot_security.demo.models.User.roleSet : 30
2025-03-21 18:00:10 - insert into user_roles (user_id,role_id) values (?,?)
2025-03-21 18:00:10 - Done inserting `1` collection rows : ru.kata.spring.boot_security.demo.models.User.roleSet
2025-03-21 18:00:10 - View name [redirect:], model {}
2025-03-21 18:00:10 - Completed 302 FOUND
2025-03-21 18:00:10 - Securing GET /admin
2025-03-21 18:00:10 - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=ru.kata.spring.boot_security.demo.service.CustomUserDetails@1c8ab062, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=79081C39374B6778F66F52014506FDB0], Granted Authorities=[ADMIN]]]
2025-03-21 18:00:10 - Secured GET /admin
2025-03-21 18:00:10 - GET "/admin", parameters={}
2025-03-21 18:00:10 - Mapped to ru.kata.spring.boot_security.demo.controller.AdminController#showUsers(Model)
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 18:00:10 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0 where u1_0.id=?
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 18:00:10 - select u1_0.id,u1_0.age,u1_0.email,u1_0.username,u1_0.usernickname,u1_0.password from users u1_0
2025-03-21 18:00:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-03-21 18:00:10 - begin
2025-03-21 18:00:10 - Created new SQL alias : r1_0
2025-03-21 18:00:10 - Registration of TableGroup [StandardTableGroup(ru.kata.spring.boot_security.demo.models.Role(10))] with identifierForTableGroup [ru.kata.spring.boot_security.demo.models.Role] for NavigablePath [ru.kata.spring.boot_security.demo.models.Role] 
2025-03-21 18:00:10 - DomainResult Graph:
 \-EntityResultImpl [ru.kata.spring.boot_security.demo.models.Role(10)]
 |  +-BasicFetch [ru.kata.spring.boot_security.demo.models.Role(10).role]
 |  \-DelayedCollectionFetch [ru.kata.spring.boot_security.demo.models.Role(10).userSet]

2025-03-21 18:00:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : ru.kata.spring.boot_security.demo.models.Role(10)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-03-21 18:00:10 - select r1_0.id,r1_0.role from roles r1_0
2025-03-21 18:00:10 - Initializer list:
	  ru.kata.spring.boot_security.demo.models.Role(10).userSet -> DelayedCollectionInitializer(ru.kata.spring.boot_security.demo.models.Role(10).userSet)@1523288808 (PluralAttribute(ru.kata.spring.boot_security.demo.models.Role.userSet))
	  ru.kata.spring.boot_security.demo.models.Role(10) -> EntityJoinedFetchInitializer(ru.kata.spring.boot_security.demo.models.Role(10))@1739443218 (SingleTableEntityPersister(ru.kata.spring.boot_security.demo.models.Role))

2025-03-21 18:00:10 - committing
2025-03-21 18:00:10 - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#5]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#4]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#25]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#26]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#28]
2025-03-21 18:00:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-03-21 18:00:10 - select rs1_0.user_id,rs1_1.id,rs1_1.role from user_roles rs1_0 join roles rs1_1 on rs1_1.id=rs1_0.role_id where rs1_0.user_id=?
2025-03-21 18:00:10 - Collection fully initialized: [ru.kata.spring.boot_security.demo.models.User.roleSet#30]
2025-03-21 18:00:10 - Completed 200 OK
2025-03-21 18:00:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:00:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:00:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:00:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:01:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:01:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:01:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:01:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:02:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:02:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:02:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:02:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:03:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:03:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:03:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:03:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:04:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:04:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:04:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:04:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:05:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:05:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:05:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:05:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:06:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:06:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:06:41 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:06:41 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:07:11 - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:07:11 - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-03-21 18:07:19 - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-21 18:07:19 - Graceful shutdown complete
2025-03-21 18:07:19 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-21 18:07:19 - HHH000031: Closing
2025-03-21 18:07:19 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@672d30f3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@45302e66]
2025-03-21 18:07:19 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-03-21 18:07:19 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-03-21 18:07:19 - HikariPool-1 - Shutdown initiated...
2025-03-21 18:07:19 - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@28f90752: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@783b3d84: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@390637bf: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8f5ef98: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5929c8f0: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4e354248: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5d67f568: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@fc79a2b: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@519ffcb9: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2ce00fb0: (connection evicted)
2025-03-21 18:07:19 - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-03-21 18:07:19 - HikariPool-1 - Shutdown completed.
